{"version":3,"file":"main.js","mappings":"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","sources":["webpack://odin-weather/webpack/runtime/async module","webpack://odin-weather/./src/gifAPI.js","webpack://odin-weather/./src/index.js","webpack://odin-weather/./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js","webpack://odin-weather/./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js","webpack://odin-weather/./node_modules/style-loader/dist/runtime/styleTagTransform.js","webpack://odin-weather/./node_modules/css-loader/dist/runtime/api.js","webpack://odin-weather/./node_modules/css-loader/dist/runtime/sourceMaps.js","webpack://odin-weather/./src/styles.css","webpack://odin-weather/./node_modules/style-loader/dist/runtime/insertStyleElement.js","webpack://odin-weather/./node_modules/style-loader/dist/runtime/insertBySelector.js","webpack://odin-weather/./src/styles.css?44b2","webpack://odin-weather/./node_modules/date-fns/constants.js","webpack://odin-weather/./node_modules/date-fns/constructFrom.js","webpack://odin-weather/./node_modules/date-fns/toDate.js","webpack://odin-weather/./node_modules/date-fns/parseISO.js","webpack://odin-weather/./node_modules/date-fns/locale/en-US/_lib/formatDistance.js","webpack://odin-weather/./node_modules/date-fns/locale/_lib/buildFormatLongFn.js","webpack://odin-weather/./node_modules/date-fns/locale/en-US/_lib/formatLong.js","webpack://odin-weather/./node_modules/date-fns/locale/en-US/_lib/formatRelative.js","webpack://odin-weather/./node_modules/date-fns/locale/_lib/buildLocalizeFn.js","webpack://odin-weather/./node_modules/date-fns/locale/_lib/buildMatchFn.js","webpack://odin-weather/./node_modules/date-fns/locale/_lib/buildMatchPatternFn.js","webpack://odin-weather/./node_modules/date-fns/locale/en-US.js","webpack://odin-weather/./node_modules/date-fns/locale/en-US/_lib/localize.js","webpack://odin-weather/./node_modules/date-fns/locale/en-US/_lib/match.js","webpack://odin-weather/./node_modules/date-fns/_lib/defaultOptions.js","webpack://odin-weather/./node_modules/date-fns/_lib/getTimezoneOffsetInMilliseconds.js","webpack://odin-weather/./node_modules/date-fns/startOfDay.js","webpack://odin-weather/./node_modules/date-fns/getDayOfYear.js","webpack://odin-weather/./node_modules/date-fns/differenceInCalendarDays.js","webpack://odin-weather/./node_modules/date-fns/_lib/normalizeDates.js","webpack://odin-weather/./node_modules/date-fns/startOfYear.js","webpack://odin-weather/./node_modules/date-fns/startOfWeek.js","webpack://odin-weather/./node_modules/date-fns/startOfISOWeek.js","webpack://odin-weather/./node_modules/date-fns/getISOWeekYear.js","webpack://odin-weather/./node_modules/date-fns/getISOWeek.js","webpack://odin-weather/./node_modules/date-fns/startOfISOWeekYear.js","webpack://odin-weather/./node_modules/date-fns/getWeekYear.js","webpack://odin-weather/./node_modules/date-fns/getWeek.js","webpack://odin-weather/./node_modules/date-fns/startOfWeekYear.js","webpack://odin-weather/./node_modules/date-fns/_lib/addLeadingZeros.js","webpack://odin-weather/./node_modules/date-fns/_lib/format/lightFormatters.js","webpack://odin-weather/./node_modules/date-fns/_lib/format/formatters.js","webpack://odin-weather/./node_modules/date-fns/_lib/format/longFormatters.js","webpack://odin-weather/./node_modules/date-fns/_lib/protectedTokens.js","webpack://odin-weather/./node_modules/date-fns/isValid.js","webpack://odin-weather/./node_modules/date-fns/isDate.js","webpack://odin-weather/./node_modules/date-fns/format.js","webpack://odin-weather/./src/weatherAPI.js","webpack://odin-weather/./node_modules/style-loader/dist/runtime/styleDomAPI.js","webpack://odin-weather/webpack/bootstrap","webpack://odin-weather/webpack/runtime/compat get default export","webpack://odin-weather/webpack/runtime/define property getters","webpack://odin-weather/webpack/runtime/hasOwnProperty shorthand","webpack://odin-weather/webpack/runtime/nonce","webpack://odin-weather/webpack/startup"],"sourcesContent":["var webpackQueues = typeof Symbol === \"function\" ? Symbol(\"webpack queues\") : \"__webpack_queues__\";\nvar webpackExports = typeof Symbol === \"function\" ? Symbol(\"webpack exports\") : \"__webpack_exports__\";\nvar webpackError = typeof Symbol === \"function\" ? Symbol(\"webpack error\") : \"__webpack_error__\";\nvar resolveQueue = (queue) => {\n\tif(queue && queue.d < 1) {\n\t\tqueue.d = 1;\n\t\tqueue.forEach((fn) => (fn.r--));\n\t\tqueue.forEach((fn) => (fn.r-- ? fn.r++ : fn()));\n\t}\n}\nvar wrapDeps = (deps) => (deps.map((dep) => {\n\tif(dep !== null && typeof dep === \"object\") {\n\t\tif(dep[webpackQueues]) return dep;\n\t\tif(dep.then) {\n\t\t\tvar queue = [];\n\t\t\tqueue.d = 0;\n\t\t\tdep.then((r) => {\n\t\t\t\tobj[webpackExports] = r;\n\t\t\t\tresolveQueue(queue);\n\t\t\t}, (e) => {\n\t\t\t\tobj[webpackError] = e;\n\t\t\t\tresolveQueue(queue);\n\t\t\t});\n\t\t\tvar obj = {};\n\t\t\tobj[webpackQueues] = (fn) => (fn(queue));\n\t\t\treturn obj;\n\t\t}\n\t}\n\tvar ret = {};\n\tret[webpackQueues] = x => {};\n\tret[webpackExports] = dep;\n\treturn ret;\n}));\n__webpack_require__.a = (module, body, hasAwait) => {\n\tvar queue;\n\thasAwait && ((queue = []).d = -1);\n\tvar depQueues = new Set();\n\tvar exports = module.exports;\n\tvar currentDeps;\n\tvar outerResolve;\n\tvar reject;\n\tvar promise = new Promise((resolve, rej) => {\n\t\treject = rej;\n\t\touterResolve = resolve;\n\t});\n\tpromise[webpackExports] = exports;\n\tpromise[webpackQueues] = (fn) => (queue && fn(queue), depQueues.forEach(fn), promise[\"catch\"](x => {}));\n\tmodule.exports = promise;\n\tbody((deps) => {\n\t\tcurrentDeps = wrapDeps(deps);\n\t\tvar fn;\n\t\tvar getResult = () => (currentDeps.map((d) => {\n\t\t\tif(d[webpackError]) throw d[webpackError];\n\t\t\treturn d[webpackExports];\n\t\t}))\n\t\tvar promise = new Promise((resolve) => {\n\t\t\tfn = () => (resolve(getResult));\n\t\t\tfn.r = 0;\n\t\t\tvar fnQueue = (q) => (q !== queue && !depQueues.has(q) && (depQueues.add(q), q && !q.d && (fn.r++, q.push(fn))));\n\t\t\tcurrentDeps.map((dep) => (dep[webpackQueues](fnQueue)));\n\t\t});\n\t\treturn fn.r ? promise : getResult();\n\t}, (err) => ((err ? reject(promise[webpackError] = err) : outerResolve(exports)), resolveQueue(queue)));\n\tqueue && queue.d < 0 && (queue.d = 0);\n};","import { getJsonForSelectedDay } from \"./weatherAPI\";\n\nconst giphyAPIkey = \"BR2DuOOkBFz9u2pzDHyKSRgQHfk8gzSQ\";\nconst giphyURL = \"https://api.giphy.com/v1/gifs/translate?\";\nconst gifContainer = document.querySelector(\".gif-container\");\n\nexport async function getGif(selectedDay) {\n  try {\n    const weatherJson = getJsonForSelectedDay(selectedDay);\n    const searchQuery = `${weatherJson.conditions}`;\n    console.log(searchQuery);\n    const response = await fetch(\n      `${giphyURL}api_key=${giphyAPIkey}&s=${searchQuery}`\n    );\n    const contentType = response.headers.get(\"content-type\");\n    if (!contentType || !contentType.includes(\"application/json\")) {\n      throw new TypeError(\"Oops, we haven't got JSON!\");\n    }\n    const img = document.createElement(\"img\");\n    const json = await response.json();\n    const gifURL = json.data.images.original.url;\n    img.src = gifURL;\n\n    //! Change this to the actual gif contatiner\n    gifContainer.innerHTML = \"\";\n    gifContainer.appendChild(img);\n  } catch (error) {\n    console.log(\"Error:\", error);\n  }\n}\n","import \"./styles.css\";\nimport {\n  getWeather,\n  printThisWeeksWeather,\n  selectWeatherDay,\n} from \"./weatherAPI\";\nimport { getGif } from \"./gifAPI\";\n\nconst weatherWeek = document.querySelector(\".weather-week\");\n\nweatherWeek.addEventListener(\"click\", (event) => {\n  selectWeatherDay(event.target.id);\n  getGif(event.target.id);\n});\n\nawait getWeather(\"las vegas\");\nprintThisWeeksWeather();\nselectWeatherDay(\"day-1\");\ngetGif(\"day-1\");\n","\"use strict\";\n\n/* istanbul ignore next  */\nfunction setAttributesWithoutAttributes(styleElement) {\n  var nonce = typeof __webpack_nonce__ !== \"undefined\" ? __webpack_nonce__ : null;\n  if (nonce) {\n    styleElement.setAttribute(\"nonce\", nonce);\n  }\n}\nmodule.exports = setAttributesWithoutAttributes;","\"use strict\";\n\nvar stylesInDOM = [];\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n  for (var i = 0; i < stylesInDOM.length; i++) {\n    if (stylesInDOM[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n  return result;\n}\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var indexByIdentifier = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3],\n      supports: item[4],\n      layer: item[5]\n    };\n    if (indexByIdentifier !== -1) {\n      stylesInDOM[indexByIdentifier].references++;\n      stylesInDOM[indexByIdentifier].updater(obj);\n    } else {\n      var updater = addElementStyle(obj, options);\n      options.byIndex = i;\n      stylesInDOM.splice(i, 0, {\n        identifier: identifier,\n        updater: updater,\n        references: 1\n      });\n    }\n    identifiers.push(identifier);\n  }\n  return identifiers;\n}\nfunction addElementStyle(obj, options) {\n  var api = options.domAPI(options);\n  api.update(obj);\n  var updater = function updater(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {\n        return;\n      }\n      api.update(obj = newObj);\n    } else {\n      api.remove();\n    }\n  };\n  return updater;\n}\nmodule.exports = function (list, options) {\n  options = options || {};\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDOM[index].references--;\n    }\n    var newLastIdentifiers = modulesToDom(newList, options);\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n      var _index = getIndexByIdentifier(_identifier);\n      if (stylesInDOM[_index].references === 0) {\n        stylesInDOM[_index].updater();\n        stylesInDOM.splice(_index, 1);\n      }\n    }\n    lastIdentifiers = newLastIdentifiers;\n  };\n};","\"use strict\";\n\n/* istanbul ignore next  */\nfunction styleTagTransform(css, styleElement) {\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css;\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild);\n    }\n    styleElement.appendChild(document.createTextNode(css));\n  }\n}\nmodule.exports = styleTagTransform;","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\nmodule.exports = function (cssWithMappingToString) {\n  var list = [];\n\n  // return the list of modules as css string\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = \"\";\n      var needLayer = typeof item[5] !== \"undefined\";\n      if (item[4]) {\n        content += \"@supports (\".concat(item[4], \") {\");\n      }\n      if (item[2]) {\n        content += \"@media \".concat(item[2], \" {\");\n      }\n      if (needLayer) {\n        content += \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\");\n      }\n      content += cssWithMappingToString(item);\n      if (needLayer) {\n        content += \"}\";\n      }\n      if (item[2]) {\n        content += \"}\";\n      }\n      if (item[4]) {\n        content += \"}\";\n      }\n      return content;\n    }).join(\"\");\n  };\n\n  // import a list of modules into the list\n  list.i = function i(modules, media, dedupe, supports, layer) {\n    if (typeof modules === \"string\") {\n      modules = [[null, modules, undefined]];\n    }\n    var alreadyImportedModules = {};\n    if (dedupe) {\n      for (var k = 0; k < this.length; k++) {\n        var id = this[k][0];\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n    for (var _k = 0; _k < modules.length; _k++) {\n      var item = [].concat(modules[_k]);\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        continue;\n      }\n      if (typeof layer !== \"undefined\") {\n        if (typeof item[5] === \"undefined\") {\n          item[5] = layer;\n        } else {\n          item[1] = \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\").concat(item[1], \"}\");\n          item[5] = layer;\n        }\n      }\n      if (media) {\n        if (!item[2]) {\n          item[2] = media;\n        } else {\n          item[1] = \"@media \".concat(item[2], \" {\").concat(item[1], \"}\");\n          item[2] = media;\n        }\n      }\n      if (supports) {\n        if (!item[4]) {\n          item[4] = \"\".concat(supports);\n        } else {\n          item[1] = \"@supports (\".concat(item[4], \") {\").concat(item[1], \"}\");\n          item[4] = supports;\n        }\n      }\n      list.push(item);\n    }\n  };\n  return list;\n};","\"use strict\";\n\nmodule.exports = function (item) {\n  var content = item[1];\n  var cssMapping = item[3];\n  if (!cssMapping) {\n    return content;\n  }\n  if (typeof btoa === \"function\") {\n    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping))));\n    var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n    var sourceMapping = \"/*# \".concat(data, \" */\");\n    return [content].concat([sourceMapping]).join(\"\\n\");\n  }\n  return [content].join(\"\\n\");\n};","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `/* CSS RESET BY DIGITAL OCEAN */\nhtml {\n  box-sizing: border-box;\n  font-size: 16px;\n}\n\nbody,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\np,\nol,\nul {\n  margin: 0;\n  padding: 0;\n  font-weight: normal;\n}\n\nol,\nul {\n  list-style: none;\n}\n\nimg {\n  max-width: 100%;\n  height: auto;\n}\n/* CSS RESET BY DIGITAL OCEAN */\n\nbody {\n  /*! Delete this later !*/\n  background-color: black;\n  color: white;\n  /*! Delete this later !*/\n\n  height: 100vh;\n\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-template-rows: 2fr 1fr;\n  grid-template-areas:\n    \"selected\"\n    \"other-weather\";\n}\n\n.selected-weather {\n  grid-area: selected;\n  display: flex;\n  gap: 20vw;\n  justify-content: center;\n  align-items: center;\n  margin: 2rem;\n  /* outline: auto orange; */\n}\n\n.weather-week {\n  grid-area: other-weather;\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  gap: 2rem;\n  font-size: 3rem;\n  flex-wrap: wrap;\n  margin: 2rem;\n  text-align: center;\n  /* outline: auto blue; */\n}\n\n.weather-day {\n  flex: 0 1 10rem;\n  outline: auto red;\n  height: 10rem;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.current-day-weather {\n  font-size: 3rem;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 2rem;\n  width: 25rem;\n}\n\n.weather-icon {\n  width: 15rem;\n}\n\n.gif-container img {\n  min-width: 100px;\n  min-height: 100px;\n  border: 3px solid black;\n  object-fit: contain;\n}\n`, \"\",{\"version\":3,\"sources\":[\"webpack://./src/styles.css\"],\"names\":[],\"mappings\":\"AAAA,+BAA+B;AAC/B;EACE,sBAAsB;EACtB,eAAe;AACjB;;AAEA;;;;;;;;;;EAUE,SAAS;EACT,UAAU;EACV,mBAAmB;AACrB;;AAEA;;EAEE,gBAAgB;AAClB;;AAEA;EACE,eAAe;EACf,YAAY;AACd;AACA,+BAA+B;;AAE/B;EACE,wBAAwB;EACxB,uBAAuB;EACvB,YAAY;EACZ,wBAAwB;;EAExB,aAAa;;EAEb,aAAa;EACb,0BAA0B;EAC1B,2BAA2B;EAC3B;;mBAEiB;AACnB;;AAEA;EACE,mBAAmB;EACnB,aAAa;EACb,SAAS;EACT,uBAAuB;EACvB,mBAAmB;EACnB,YAAY;EACZ,0BAA0B;AAC5B;;AAEA;EACE,wBAAwB;EACxB,aAAa;EACb,6BAA6B;EAC7B,mBAAmB;EACnB,SAAS;EACT,eAAe;EACf,eAAe;EACf,YAAY;EACZ,kBAAkB;EAClB,wBAAwB;AAC1B;;AAEA;EACE,eAAe;EACf,iBAAiB;EACjB,aAAa;;EAEb,aAAa;EACb,uBAAuB;EACvB,mBAAmB;AACrB;;AAEA;EACE,eAAe;EACf,aAAa;EACb,sBAAsB;EACtB,uBAAuB;EACvB,mBAAmB;EACnB,SAAS;EACT,YAAY;AACd;;AAEA;EACE,YAAY;AACd;;AAEA;EACE,gBAAgB;EAChB,iBAAiB;EACjB,uBAAuB;EACvB,mBAAmB;AACrB\",\"sourcesContent\":[\"/* CSS RESET BY DIGITAL OCEAN */\\nhtml {\\n  box-sizing: border-box;\\n  font-size: 16px;\\n}\\n\\nbody,\\nh1,\\nh2,\\nh3,\\nh4,\\nh5,\\nh6,\\np,\\nol,\\nul {\\n  margin: 0;\\n  padding: 0;\\n  font-weight: normal;\\n}\\n\\nol,\\nul {\\n  list-style: none;\\n}\\n\\nimg {\\n  max-width: 100%;\\n  height: auto;\\n}\\n/* CSS RESET BY DIGITAL OCEAN */\\n\\nbody {\\n  /*! Delete this later !*/\\n  background-color: black;\\n  color: white;\\n  /*! Delete this later !*/\\n\\n  height: 100vh;\\n\\n  display: grid;\\n  grid-template-columns: 1fr;\\n  grid-template-rows: 2fr 1fr;\\n  grid-template-areas:\\n    \\\"selected\\\"\\n    \\\"other-weather\\\";\\n}\\n\\n.selected-weather {\\n  grid-area: selected;\\n  display: flex;\\n  gap: 20vw;\\n  justify-content: center;\\n  align-items: center;\\n  margin: 2rem;\\n  /* outline: auto orange; */\\n}\\n\\n.weather-week {\\n  grid-area: other-weather;\\n  display: flex;\\n  justify-content: space-around;\\n  align-items: center;\\n  gap: 2rem;\\n  font-size: 3rem;\\n  flex-wrap: wrap;\\n  margin: 2rem;\\n  text-align: center;\\n  /* outline: auto blue; */\\n}\\n\\n.weather-day {\\n  flex: 0 1 10rem;\\n  outline: auto red;\\n  height: 10rem;\\n\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n}\\n\\n.current-day-weather {\\n  font-size: 3rem;\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: center;\\n  align-items: center;\\n  gap: 2rem;\\n  width: 25rem;\\n}\\n\\n.weather-icon {\\n  width: 15rem;\\n}\\n\\n.gif-container img {\\n  min-width: 100px;\\n  min-height: 100px;\\n  border: 3px solid black;\\n  object-fit: contain;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\"use strict\";\n\n/* istanbul ignore next  */\nfunction insertStyleElement(options) {\n  var element = document.createElement(\"style\");\n  options.setAttributes(element, options.attributes);\n  options.insert(element, options.options);\n  return element;\n}\nmodule.exports = insertStyleElement;","\"use strict\";\n\nvar memo = {};\n\n/* istanbul ignore next  */\nfunction getTarget(target) {\n  if (typeof memo[target] === \"undefined\") {\n    var styleTarget = document.querySelector(target);\n\n    // Special case to return head of iframe instead of iframe itself\n    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n      try {\n        // This will throw an exception if access to iframe is blocked\n        // due to cross-origin restrictions\n        styleTarget = styleTarget.contentDocument.head;\n      } catch (e) {\n        // istanbul ignore next\n        styleTarget = null;\n      }\n    }\n    memo[target] = styleTarget;\n  }\n  return memo[target];\n}\n\n/* istanbul ignore next  */\nfunction insertBySelector(insert, style) {\n  var target = getTarget(insert);\n  if (!target) {\n    throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n  }\n  target.appendChild(style);\n}\nmodule.exports = insertBySelector;","\n      import API from \"!../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../node_modules/css-loader/dist/cjs.js!./styles.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\noptions.insert = insertFn.bind(null, \"head\");\noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../node_modules/css-loader/dist/cjs.js!./styles.css\";\n       export default content && content.locals ? content.locals : undefined;\n","/**\n * @module constants\n * @summary Useful constants\n * @description\n * Collection of useful date constants.\n *\n * The constants could be imported from `date-fns/constants`:\n *\n * ```ts\n * import { maxTime, minTime } from \"./constants/date-fns/constants\";\n *\n * function isAllowedTime(time) {\n *   return time <= maxTime && time >= minTime;\n * }\n * ```\n */\n\n/**\n * @constant\n * @name daysInWeek\n * @summary Days in 1 week.\n */\nexport const daysInWeek = 7;\n\n/**\n * @constant\n * @name daysInYear\n * @summary Days in 1 year.\n *\n * @description\n * How many days in a year.\n *\n * One years equals 365.2425 days according to the formula:\n *\n * > Leap year occurs every 4 years, except for years that are divisible by 100 and not divisible by 400.\n * > 1 mean year = (365+1/4-1/100+1/400) days = 365.2425 days\n */\nexport const daysInYear = 365.2425;\n\n/**\n * @constant\n * @name maxTime\n * @summary Maximum allowed time.\n *\n * @example\n * import { maxTime } from \"./constants/date-fns/constants\";\n *\n * const isValid = 8640000000000001 <= maxTime;\n * //=> false\n *\n * new Date(8640000000000001);\n * //=> Invalid Date\n */\nexport const maxTime = Math.pow(10, 8) * 24 * 60 * 60 * 1000;\n\n/**\n * @constant\n * @name minTime\n * @summary Minimum allowed time.\n *\n * @example\n * import { minTime } from \"./constants/date-fns/constants\";\n *\n * const isValid = -8640000000000001 >= minTime;\n * //=> false\n *\n * new Date(-8640000000000001)\n * //=> Invalid Date\n */\nexport const minTime = -maxTime;\n\n/**\n * @constant\n * @name millisecondsInWeek\n * @summary Milliseconds in 1 week.\n */\nexport const millisecondsInWeek = 604800000;\n\n/**\n * @constant\n * @name millisecondsInDay\n * @summary Milliseconds in 1 day.\n */\nexport const millisecondsInDay = 86400000;\n\n/**\n * @constant\n * @name millisecondsInMinute\n * @summary Milliseconds in 1 minute\n */\nexport const millisecondsInMinute = 60000;\n\n/**\n * @constant\n * @name millisecondsInHour\n * @summary Milliseconds in 1 hour\n */\nexport const millisecondsInHour = 3600000;\n\n/**\n * @constant\n * @name millisecondsInSecond\n * @summary Milliseconds in 1 second\n */\nexport const millisecondsInSecond = 1000;\n\n/**\n * @constant\n * @name minutesInYear\n * @summary Minutes in 1 year.\n */\nexport const minutesInYear = 525600;\n\n/**\n * @constant\n * @name minutesInMonth\n * @summary Minutes in 1 month.\n */\nexport const minutesInMonth = 43200;\n\n/**\n * @constant\n * @name minutesInDay\n * @summary Minutes in 1 day.\n */\nexport const minutesInDay = 1440;\n\n/**\n * @constant\n * @name minutesInHour\n * @summary Minutes in 1 hour.\n */\nexport const minutesInHour = 60;\n\n/**\n * @constant\n * @name monthsInQuarter\n * @summary Months in 1 quarter.\n */\nexport const monthsInQuarter = 3;\n\n/**\n * @constant\n * @name monthsInYear\n * @summary Months in 1 year.\n */\nexport const monthsInYear = 12;\n\n/**\n * @constant\n * @name quartersInYear\n * @summary Quarters in 1 year\n */\nexport const quartersInYear = 4;\n\n/**\n * @constant\n * @name secondsInHour\n * @summary Seconds in 1 hour.\n */\nexport const secondsInHour = 3600;\n\n/**\n * @constant\n * @name secondsInMinute\n * @summary Seconds in 1 minute.\n */\nexport const secondsInMinute = 60;\n\n/**\n * @constant\n * @name secondsInDay\n * @summary Seconds in 1 day.\n */\nexport const secondsInDay = secondsInHour * 24;\n\n/**\n * @constant\n * @name secondsInWeek\n * @summary Seconds in 1 week.\n */\nexport const secondsInWeek = secondsInDay * 7;\n\n/**\n * @constant\n * @name secondsInYear\n * @summary Seconds in 1 year.\n */\nexport const secondsInYear = secondsInDay * daysInYear;\n\n/**\n * @constant\n * @name secondsInMonth\n * @summary Seconds in 1 month\n */\nexport const secondsInMonth = secondsInYear / 12;\n\n/**\n * @constant\n * @name secondsInQuarter\n * @summary Seconds in 1 quarter.\n */\nexport const secondsInQuarter = secondsInMonth * 3;\n\n/**\n * @constant\n * @name constructFromSymbol\n * @summary Symbol enabling Date extensions to inherit properties from the reference date.\n *\n * The symbol is used to enable the `constructFrom` function to construct a date\n * using a reference date and a value. It allows to transfer extra properties\n * from the reference date to the new date. It's useful for extensions like\n * [`TZDate`](https://github.com/date-fns/tz) that accept a time zone as\n * a constructor argument.\n */\nexport const constructFromSymbol = Symbol.for(\"constructDateFrom\");\n","import { constructFromSymbol } from \"./constants.js\";\n\n/**\n * @name constructFrom\n * @category Generic Helpers\n * @summary Constructs a date using the reference date and the value\n *\n * @description\n * The function constructs a new date using the constructor from the reference\n * date and the given value. It helps to build generic functions that accept\n * date extensions.\n *\n * It defaults to `Date` if the passed reference date is a number or a string.\n *\n * Starting from v3.7.0, it allows to construct a date using `[Symbol.for(\"constructDateFrom\")]`\n * enabling to transfer extra properties from the reference date to the new date.\n * It's useful for extensions like [`TZDate`](https://github.com/date-fns/tz)\n * that accept a time zone as a constructor argument.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The reference date to take constructor from\n * @param value - The value to create the date\n *\n * @returns Date initialized using the given date and value\n *\n * @example\n * import { constructFrom } from \"./constructFrom/date-fns\";\n *\n * // A function that clones a date preserving the original type\n * function cloneDate<DateType extends Date>(date: DateType): DateType {\n *   return constructFrom(\n *     date, // Use constructor from the given date\n *     date.getTime() // Use the date value to create a new date\n *   );\n * }\n */\nexport function constructFrom(date, value) {\n  if (typeof date === \"function\") return date(value);\n\n  if (date && typeof date === \"object\" && constructFromSymbol in date)\n    return date[constructFromSymbol](value);\n\n  if (date instanceof Date) return new date.constructor(value);\n\n  return new Date(value);\n}\n\n// Fallback for modularized imports:\nexport default constructFrom;\n","import { constructFrom } from \"./constructFrom.js\";\n\n/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * Starting from v3.7.0, it clones a date using `[Symbol.for(\"constructDateFrom\")]`\n * enabling to transfer extra properties from the reference date to the new date.\n * It's useful for extensions like [`TZDate`](https://github.com/date-fns/tz)\n * that accept a time zone as a constructor argument.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param argument - The value to convert\n *\n * @returns The parsed date in the local time zone\n *\n * @example\n * // Clone the date:\n * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert the timestamp to date:\n * const result = toDate(1392098430000)\n * //=> Tue Feb 11 2014 11:30:30\n */\nexport function toDate(argument, context) {\n  // [TODO] Get rid of `toDate` or `constructFrom`?\n  return constructFrom(context || argument, argument);\n}\n\n// Fallback for modularized imports:\nexport default toDate;\n","import {\n  millisecondsInHour,\n  millisecondsInMinute,\n} from \"./constants.js\";\nimport { constructFrom } from \"./constructFrom.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link parseISO} function options.\n */\n\n/**\n * @name parseISO\n * @category Common Helpers\n * @summary Parse ISO string\n *\n * @description\n * Parse the given string in ISO 8601 format and return an instance of Date.\n *\n * Function accepts complete ISO 8601 formats as well as partial implementations.\n * ISO 8601: http://en.wikipedia.org/wiki/ISO_8601\n *\n * If the argument isn't a string, the function cannot parse the string or\n * the values are invalid, it returns Invalid Date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param argument - The value to convert\n * @param options - An object with options\n *\n * @returns The parsed date in the local time zone\n *\n * @example\n * // Convert string '2014-02-11T11:30:30' to date:\n * const result = parseISO('2014-02-11T11:30:30')\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert string '+02014101' to date,\n * // if the additional number of digits in the extended year format is 1:\n * const result = parseISO('+02014101', { additionalDigits: 1 })\n * //=> Fri Apr 11 2014 00:00:00\n */\nexport function parseISO(argument, options) {\n  const invalidDate = () => constructFrom(options?.in, NaN);\n\n  const additionalDigits = options?.additionalDigits ?? 2;\n  const dateStrings = splitDateString(argument);\n\n  let date;\n  if (dateStrings.date) {\n    const parseYearResult = parseYear(dateStrings.date, additionalDigits);\n    date = parseDate(parseYearResult.restDateString, parseYearResult.year);\n  }\n\n  if (!date || isNaN(+date)) return invalidDate();\n\n  const timestamp = +date;\n  let time = 0;\n  let offset;\n\n  if (dateStrings.time) {\n    time = parseTime(dateStrings.time);\n    if (isNaN(time)) return invalidDate();\n  }\n\n  if (dateStrings.timezone) {\n    offset = parseTimezone(dateStrings.timezone);\n    if (isNaN(offset)) return invalidDate();\n  } else {\n    const tmpDate = new Date(timestamp + time);\n    const result = toDate(0, options?.in);\n    result.setFullYear(\n      tmpDate.getUTCFullYear(),\n      tmpDate.getUTCMonth(),\n      tmpDate.getUTCDate(),\n    );\n    result.setHours(\n      tmpDate.getUTCHours(),\n      tmpDate.getUTCMinutes(),\n      tmpDate.getUTCSeconds(),\n      tmpDate.getUTCMilliseconds(),\n    );\n    return result;\n  }\n\n  return toDate(timestamp + time + offset, options?.in);\n}\n\nconst patterns = {\n  dateTimeDelimiter: /[T ]/,\n  timeZoneDelimiter: /[Z ]/i,\n  timezone: /([Z+-].*)$/,\n};\n\nconst dateRegex =\n  /^-?(?:(\\d{3})|(\\d{2})(?:-?(\\d{2}))?|W(\\d{2})(?:-?(\\d{1}))?|)$/;\nconst timeRegex =\n  /^(\\d{2}(?:[.,]\\d*)?)(?::?(\\d{2}(?:[.,]\\d*)?))?(?::?(\\d{2}(?:[.,]\\d*)?))?$/;\nconst timezoneRegex = /^([+-])(\\d{2})(?::?(\\d{2}))?$/;\n\nfunction splitDateString(dateString) {\n  const dateStrings = {};\n  const array = dateString.split(patterns.dateTimeDelimiter);\n  let timeString;\n\n  // The regex match should only return at maximum two array elements.\n  // [date], [time], or [date, time].\n  if (array.length > 2) {\n    return dateStrings;\n  }\n\n  if (/:/.test(array[0])) {\n    timeString = array[0];\n  } else {\n    dateStrings.date = array[0];\n    timeString = array[1];\n    if (patterns.timeZoneDelimiter.test(dateStrings.date)) {\n      dateStrings.date = dateString.split(patterns.timeZoneDelimiter)[0];\n      timeString = dateString.substr(\n        dateStrings.date.length,\n        dateString.length,\n      );\n    }\n  }\n\n  if (timeString) {\n    const token = patterns.timezone.exec(timeString);\n    if (token) {\n      dateStrings.time = timeString.replace(token[1], \"\");\n      dateStrings.timezone = token[1];\n    } else {\n      dateStrings.time = timeString;\n    }\n  }\n\n  return dateStrings;\n}\n\nfunction parseYear(dateString, additionalDigits) {\n  const regex = new RegExp(\n    \"^(?:(\\\\d{4}|[+-]\\\\d{\" +\n      (4 + additionalDigits) +\n      \"})|(\\\\d{2}|[+-]\\\\d{\" +\n      (2 + additionalDigits) +\n      \"})$)\",\n  );\n\n  const captures = dateString.match(regex);\n  // Invalid ISO-formatted year\n  if (!captures) return { year: NaN, restDateString: \"\" };\n\n  const year = captures[1] ? parseInt(captures[1]) : null;\n  const century = captures[2] ? parseInt(captures[2]) : null;\n\n  // either year or century is null, not both\n  return {\n    year: century === null ? year : century * 100,\n    restDateString: dateString.slice((captures[1] || captures[2]).length),\n  };\n}\n\nfunction parseDate(dateString, year) {\n  // Invalid ISO-formatted year\n  if (year === null) return new Date(NaN);\n\n  const captures = dateString.match(dateRegex);\n  // Invalid ISO-formatted string\n  if (!captures) return new Date(NaN);\n\n  const isWeekDate = !!captures[4];\n  const dayOfYear = parseDateUnit(captures[1]);\n  const month = parseDateUnit(captures[2]) - 1;\n  const day = parseDateUnit(captures[3]);\n  const week = parseDateUnit(captures[4]);\n  const dayOfWeek = parseDateUnit(captures[5]) - 1;\n\n  if (isWeekDate) {\n    if (!validateWeekDate(year, week, dayOfWeek)) {\n      return new Date(NaN);\n    }\n    return dayOfISOWeekYear(year, week, dayOfWeek);\n  } else {\n    const date = new Date(0);\n    if (\n      !validateDate(year, month, day) ||\n      !validateDayOfYearDate(year, dayOfYear)\n    ) {\n      return new Date(NaN);\n    }\n    date.setUTCFullYear(year, month, Math.max(dayOfYear, day));\n    return date;\n  }\n}\n\nfunction parseDateUnit(value) {\n  return value ? parseInt(value) : 1;\n}\n\nfunction parseTime(timeString) {\n  const captures = timeString.match(timeRegex);\n  if (!captures) return NaN; // Invalid ISO-formatted time\n\n  const hours = parseTimeUnit(captures[1]);\n  const minutes = parseTimeUnit(captures[2]);\n  const seconds = parseTimeUnit(captures[3]);\n\n  if (!validateTime(hours, minutes, seconds)) {\n    return NaN;\n  }\n\n  return (\n    hours * millisecondsInHour + minutes * millisecondsInMinute + seconds * 1000\n  );\n}\n\nfunction parseTimeUnit(value) {\n  return (value && parseFloat(value.replace(\",\", \".\"))) || 0;\n}\n\nfunction parseTimezone(timezoneString) {\n  if (timezoneString === \"Z\") return 0;\n\n  const captures = timezoneString.match(timezoneRegex);\n  if (!captures) return 0;\n\n  const sign = captures[1] === \"+\" ? -1 : 1;\n  const hours = parseInt(captures[2]);\n  const minutes = (captures[3] && parseInt(captures[3])) || 0;\n\n  if (!validateTimezone(hours, minutes)) {\n    return NaN;\n  }\n\n  return sign * (hours * millisecondsInHour + minutes * millisecondsInMinute);\n}\n\nfunction dayOfISOWeekYear(isoWeekYear, week, day) {\n  const date = new Date(0);\n  date.setUTCFullYear(isoWeekYear, 0, 4);\n  const fourthOfJanuaryDay = date.getUTCDay() || 7;\n  const diff = (week - 1) * 7 + day + 1 - fourthOfJanuaryDay;\n  date.setUTCDate(date.getUTCDate() + diff);\n  return date;\n}\n\n// Validation functions\n\n// February is null to handle the leap year (using ||)\nconst daysInMonths = [31, null, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\nfunction isLeapYearIndex(year) {\n  return year % 400 === 0 || (year % 4 === 0 && year % 100 !== 0);\n}\n\nfunction validateDate(year, month, date) {\n  return (\n    month >= 0 &&\n    month <= 11 &&\n    date >= 1 &&\n    date <= (daysInMonths[month] || (isLeapYearIndex(year) ? 29 : 28))\n  );\n}\n\nfunction validateDayOfYearDate(year, dayOfYear) {\n  return dayOfYear >= 1 && dayOfYear <= (isLeapYearIndex(year) ? 366 : 365);\n}\n\nfunction validateWeekDate(_year, week, day) {\n  return week >= 1 && week <= 53 && day >= 0 && day <= 6;\n}\n\nfunction validateTime(hours, minutes, seconds) {\n  if (hours === 24) {\n    return minutes === 0 && seconds === 0;\n  }\n\n  return (\n    seconds >= 0 &&\n    seconds < 60 &&\n    minutes >= 0 &&\n    minutes < 60 &&\n    hours >= 0 &&\n    hours < 25\n  );\n}\n\nfunction validateTimezone(_hours, minutes) {\n  return minutes >= 0 && minutes <= 59;\n}\n\n// Fallback for modularized imports:\nexport default parseISO;\n","const formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: \"less than a second\",\n    other: \"less than {{count}} seconds\",\n  },\n\n  xSeconds: {\n    one: \"1 second\",\n    other: \"{{count}} seconds\",\n  },\n\n  halfAMinute: \"half a minute\",\n\n  lessThanXMinutes: {\n    one: \"less than a minute\",\n    other: \"less than {{count}} minutes\",\n  },\n\n  xMinutes: {\n    one: \"1 minute\",\n    other: \"{{count}} minutes\",\n  },\n\n  aboutXHours: {\n    one: \"about 1 hour\",\n    other: \"about {{count}} hours\",\n  },\n\n  xHours: {\n    one: \"1 hour\",\n    other: \"{{count}} hours\",\n  },\n\n  xDays: {\n    one: \"1 day\",\n    other: \"{{count}} days\",\n  },\n\n  aboutXWeeks: {\n    one: \"about 1 week\",\n    other: \"about {{count}} weeks\",\n  },\n\n  xWeeks: {\n    one: \"1 week\",\n    other: \"{{count}} weeks\",\n  },\n\n  aboutXMonths: {\n    one: \"about 1 month\",\n    other: \"about {{count}} months\",\n  },\n\n  xMonths: {\n    one: \"1 month\",\n    other: \"{{count}} months\",\n  },\n\n  aboutXYears: {\n    one: \"about 1 year\",\n    other: \"about {{count}} years\",\n  },\n\n  xYears: {\n    one: \"1 year\",\n    other: \"{{count}} years\",\n  },\n\n  overXYears: {\n    one: \"over 1 year\",\n    other: \"over {{count}} years\",\n  },\n\n  almostXYears: {\n    one: \"almost 1 year\",\n    other: \"almost {{count}} years\",\n  },\n};\n\nexport const formatDistance = (token, count, options) => {\n  let result;\n\n  const tokenValue = formatDistanceLocale[token];\n  if (typeof tokenValue === \"string\") {\n    result = tokenValue;\n  } else if (count === 1) {\n    result = tokenValue.one;\n  } else {\n    result = tokenValue.other.replace(\"{{count}}\", count.toString());\n  }\n\n  if (options?.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return \"in \" + result;\n    } else {\n      return result + \" ago\";\n    }\n  }\n\n  return result;\n};\n","export function buildFormatLongFn(args) {\n  return (options = {}) => {\n    // TODO: Remove String()\n    const width = options.width ? String(options.width) : args.defaultWidth;\n    const format = args.formats[width] || args.formats[args.defaultWidth];\n    return format;\n  };\n}\n","import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\n\nconst dateFormats = {\n  full: \"EEEE, MMMM do, y\",\n  long: \"MMMM do, y\",\n  medium: \"MMM d, y\",\n  short: \"MM/dd/yyyy\",\n};\n\nconst timeFormats = {\n  full: \"h:mm:ss a zzzz\",\n  long: \"h:mm:ss a z\",\n  medium: \"h:mm:ss a\",\n  short: \"h:mm a\",\n};\n\nconst dateTimeFormats = {\n  full: \"{{date}} 'at' {{time}}\",\n  long: \"{{date}} 'at' {{time}}\",\n  medium: \"{{date}}, {{time}}\",\n  short: \"{{date}}, {{time}}\",\n};\n\nexport const formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: \"full\",\n  }),\n\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: \"full\",\n  }),\n\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: \"full\",\n  }),\n};\n","const formatRelativeLocale = {\n  lastWeek: \"'last' eeee 'at' p\",\n  yesterday: \"'yesterday at' p\",\n  today: \"'today at' p\",\n  tomorrow: \"'tomorrow at' p\",\n  nextWeek: \"eeee 'at' p\",\n  other: \"P\",\n};\n\nexport const formatRelative = (token, _date, _baseDate, _options) =>\n  formatRelativeLocale[token];\n","/**\n * The localize function argument callback which allows to convert raw value to\n * the actual type.\n *\n * @param value - The value to convert\n *\n * @returns The converted value\n */\n\n/**\n * The map of localized values for each width.\n */\n\n/**\n * The index type of the locale unit value. It types conversion of units of\n * values that don't start at 0 (i.e. quarters).\n */\n\n/**\n * Converts the unit value to the tuple of values.\n */\n\n/**\n * The tuple of localized era values. The first element represents BC,\n * the second element represents AD.\n */\n\n/**\n * The tuple of localized quarter values. The first element represents Q1.\n */\n\n/**\n * The tuple of localized day values. The first element represents Sunday.\n */\n\n/**\n * The tuple of localized month values. The first element represents January.\n */\n\nexport function buildLocalizeFn(args) {\n  return (value, options) => {\n    const context = options?.context ? String(options.context) : \"standalone\";\n\n    let valuesArray;\n    if (context === \"formatting\" && args.formattingValues) {\n      const defaultWidth = args.defaultFormattingWidth || args.defaultWidth;\n      const width = options?.width ? String(options.width) : defaultWidth;\n\n      valuesArray =\n        args.formattingValues[width] || args.formattingValues[defaultWidth];\n    } else {\n      const defaultWidth = args.defaultWidth;\n      const width = options?.width ? String(options.width) : args.defaultWidth;\n\n      valuesArray = args.values[width] || args.values[defaultWidth];\n    }\n    const index = args.argumentCallback ? args.argumentCallback(value) : value;\n\n    // @ts-expect-error - For some reason TypeScript just don't want to match it, no matter how hard we try. I challenge you to try to remove it!\n    return valuesArray[index];\n  };\n}\n","export function buildMatchFn(args) {\n  return (string, options = {}) => {\n    const width = options.width;\n\n    const matchPattern =\n      (width && args.matchPatterns[width]) ||\n      args.matchPatterns[args.defaultMatchWidth];\n    const matchResult = string.match(matchPattern);\n\n    if (!matchResult) {\n      return null;\n    }\n    const matchedString = matchResult[0];\n\n    const parsePatterns =\n      (width && args.parsePatterns[width]) ||\n      args.parsePatterns[args.defaultParseWidth];\n\n    const key = Array.isArray(parsePatterns)\n      ? findIndex(parsePatterns, (pattern) => pattern.test(matchedString))\n      : // [TODO] -- I challenge you to fix the type\n        findKey(parsePatterns, (pattern) => pattern.test(matchedString));\n\n    let value;\n\n    value = args.valueCallback ? args.valueCallback(key) : key;\n    value = options.valueCallback\n      ? // [TODO] -- I challenge you to fix the type\n        options.valueCallback(value)\n      : value;\n\n    const rest = string.slice(matchedString.length);\n\n    return { value, rest };\n  };\n}\n\nfunction findKey(object, predicate) {\n  for (const key in object) {\n    if (\n      Object.prototype.hasOwnProperty.call(object, key) &&\n      predicate(object[key])\n    ) {\n      return key;\n    }\n  }\n  return undefined;\n}\n\nfunction findIndex(array, predicate) {\n  for (let key = 0; key < array.length; key++) {\n    if (predicate(array[key])) {\n      return key;\n    }\n  }\n  return undefined;\n}\n","export function buildMatchPatternFn(args) {\n  return (string, options = {}) => {\n    const matchResult = string.match(args.matchPattern);\n    if (!matchResult) return null;\n    const matchedString = matchResult[0];\n\n    const parseResult = string.match(args.parsePattern);\n    if (!parseResult) return null;\n    let value = args.valueCallback\n      ? args.valueCallback(parseResult[0])\n      : parseResult[0];\n\n    // [TODO] I challenge you to fix the type\n    value = options.valueCallback ? options.valueCallback(value) : value;\n\n    const rest = string.slice(matchedString.length);\n\n    return { value, rest };\n  };\n}\n","import { formatDistance } from \"./en-US/_lib/formatDistance.js\";\nimport { formatLong } from \"./en-US/_lib/formatLong.js\";\nimport { formatRelative } from \"./en-US/_lib/formatRelative.js\";\nimport { localize } from \"./en-US/_lib/localize.js\";\nimport { match } from \"./en-US/_lib/match.js\";\n\n/**\n * @category Locales\n * @summary English locale (United States).\n * @language English\n * @iso-639-2 eng\n * @author Sasha Koss [@kossnocorp](https://github.com/kossnocorp)\n * @author Lesha Koss [@leshakoss](https://github.com/leshakoss)\n */\nexport const enUS = {\n  code: \"en-US\",\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 0 /* Sunday */,\n    firstWeekContainsDate: 1,\n  },\n};\n\n// Fallback for modularized imports:\nexport default enUS;\n","import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\n\nconst eraValues = {\n  narrow: [\"B\", \"A\"],\n  abbreviated: [\"BC\", \"AD\"],\n  wide: [\"Before Christ\", \"Anno Domini\"],\n};\n\nconst quarterValues = {\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\n  abbreviated: [\"Q1\", \"Q2\", \"Q3\", \"Q4\"],\n  wide: [\"1st quarter\", \"2nd quarter\", \"3rd quarter\", \"4th quarter\"],\n};\n\n// Note: in English, the names of days of the week and months are capitalized.\n// If you are making a new locale based on this one, check if the same is true for the language you're working on.\n// Generally, formatted dates should look like they are in the middle of a sentence,\n// e.g. in Spanish language the weekdays and months should be in the lowercase.\nconst monthValues = {\n  narrow: [\"J\", \"F\", \"M\", \"A\", \"M\", \"J\", \"J\", \"A\", \"S\", \"O\", \"N\", \"D\"],\n  abbreviated: [\n    \"Jan\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"May\",\n    \"Jun\",\n    \"Jul\",\n    \"Aug\",\n    \"Sep\",\n    \"Oct\",\n    \"Nov\",\n    \"Dec\",\n  ],\n\n  wide: [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ],\n};\n\nconst dayValues = {\n  narrow: [\"S\", \"M\", \"T\", \"W\", \"T\", \"F\", \"S\"],\n  short: [\"Su\", \"Mo\", \"Tu\", \"We\", \"Th\", \"Fr\", \"Sa\"],\n  abbreviated: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  wide: [\n    \"Sunday\",\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\",\n  ],\n};\n\nconst dayPeriodValues = {\n  narrow: {\n    am: \"a\",\n    pm: \"p\",\n    midnight: \"mi\",\n    noon: \"n\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n};\n\nconst formattingDayPeriodValues = {\n  narrow: {\n    am: \"a\",\n    pm: \"p\",\n    midnight: \"mi\",\n    noon: \"n\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n};\n\nconst ordinalNumber = (dirtyNumber, _options) => {\n  const number = Number(dirtyNumber);\n\n  // If ordinal numbers depend on context, for example,\n  // if they are different for different grammatical genders,\n  // use `options.unit`.\n  //\n  // `unit` can be 'year', 'quarter', 'month', 'week', 'date', 'dayOfYear',\n  // 'day', 'hour', 'minute', 'second'.\n\n  const rem100 = number % 100;\n  if (rem100 > 20 || rem100 < 10) {\n    switch (rem100 % 10) {\n      case 1:\n        return number + \"st\";\n      case 2:\n        return number + \"nd\";\n      case 3:\n        return number + \"rd\";\n    }\n  }\n  return number + \"th\";\n};\n\nexport const localize = {\n  ordinalNumber,\n\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: \"wide\",\n  }),\n\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: \"wide\",\n    argumentCallback: (quarter) => quarter - 1,\n  }),\n\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: \"wide\",\n  }),\n\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: \"wide\",\n  }),\n\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: \"wide\",\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: \"wide\",\n  }),\n};\n","import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\n\nconst matchOrdinalNumberPattern = /^(\\d+)(th|st|nd|rd)?/i;\nconst parseOrdinalNumberPattern = /\\d+/i;\n\nconst matchEraPatterns = {\n  narrow: /^(b|a)/i,\n  abbreviated: /^(b\\.?\\s?c\\.?|b\\.?\\s?c\\.?\\s?e\\.?|a\\.?\\s?d\\.?|c\\.?\\s?e\\.?)/i,\n  wide: /^(before christ|before common era|anno domini|common era)/i,\n};\nconst parseEraPatterns = {\n  any: [/^b/i, /^(a|c)/i],\n};\n\nconst matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^q[1234]/i,\n  wide: /^[1234](th|st|nd|rd)? quarter/i,\n};\nconst parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i],\n};\n\nconst matchMonthPatterns = {\n  narrow: /^[jfmasond]/i,\n  abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,\n  wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i,\n};\nconst parseMonthPatterns = {\n  narrow: [\n    /^j/i,\n    /^f/i,\n    /^m/i,\n    /^a/i,\n    /^m/i,\n    /^j/i,\n    /^j/i,\n    /^a/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n\n  any: [\n    /^ja/i,\n    /^f/i,\n    /^mar/i,\n    /^ap/i,\n    /^may/i,\n    /^jun/i,\n    /^jul/i,\n    /^au/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n};\n\nconst matchDayPatterns = {\n  narrow: /^[smtwf]/i,\n  short: /^(su|mo|tu|we|th|fr|sa)/i,\n  abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,\n  wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i,\n};\nconst parseDayPatterns = {\n  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],\n  any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i],\n};\n\nconst matchDayPeriodPatterns = {\n  narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,\n  any: /^([ap]\\.?\\s?m\\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i,\n};\nconst parseDayPeriodPatterns = {\n  any: {\n    am: /^a/i,\n    pm: /^p/i,\n    midnight: /^mi/i,\n    noon: /^no/i,\n    morning: /morning/i,\n    afternoon: /afternoon/i,\n    evening: /evening/i,\n    night: /night/i,\n  },\n};\n\nexport const match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: (value) => parseInt(value, 10),\n  }),\n\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: \"any\",\n    valueCallback: (index) => index + 1,\n  }),\n\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: \"any\",\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: \"any\",\n  }),\n};\n","let defaultOptions = {};\n\nexport function getDefaultOptions() {\n  return defaultOptions;\n}\n\nexport function setDefaultOptions(newOptions) {\n  defaultOptions = newOptions;\n}\n","import { toDate } from \"../toDate.js\";\n\n/**\n * Google Chrome as of 67.0.3396.87 introduced timezones with offset that includes seconds.\n * They usually appear for dates that denote time before the timezones were introduced\n * (e.g. for 'Europe/Prague' timezone the offset is GMT+00:57:44 before 1 October 1891\n * and GMT+01:00:00 after that date)\n *\n * Date#getTimezoneOffset returns the offset in minutes and would return 57 for the example above,\n * which would lead to incorrect calculations.\n *\n * This function returns the timezone offset in milliseconds that takes seconds in account.\n */\nexport function getTimezoneOffsetInMilliseconds(date) {\n  const _date = toDate(date);\n  const utcDate = new Date(\n    Date.UTC(\n      _date.getFullYear(),\n      _date.getMonth(),\n      _date.getDate(),\n      _date.getHours(),\n      _date.getMinutes(),\n      _date.getSeconds(),\n      _date.getMilliseconds(),\n    ),\n  );\n  utcDate.setUTCFullYear(_date.getFullYear());\n  return +date - +utcDate;\n}\n","import { toDate } from \"./toDate.js\";\n\n/**\n * The {@link startOfDay} function options.\n */\n\n/**\n * @name startOfDay\n * @category Day Helpers\n * @summary Return the start of a day for the given date.\n *\n * @description\n * Return the start of a day for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - The options\n *\n * @returns The start of a day\n *\n * @example\n * // The start of a day for 2 September 2014 11:55:00:\n * const result = startOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 00:00:00\n */\nexport function startOfDay(date, options) {\n  const _date = toDate(date, options?.in);\n  _date.setHours(0, 0, 0, 0);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfDay;\n","import { differenceInCalendarDays } from \"./differenceInCalendarDays.js\";\nimport { startOfYear } from \"./startOfYear.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link getDayOfYear} function options.\n */\n\n/**\n * @name getDayOfYear\n * @category Day Helpers\n * @summary Get the day of the year of the given date.\n *\n * @description\n * Get the day of the year of the given date.\n *\n * @param date - The given date\n * @param options - The options\n *\n * @returns The day of year\n *\n * @example\n * // Which day of the year is 2 July 2014?\n * const result = getDayOfYear(new Date(2014, 6, 2))\n * //=> 183\n */\nexport function getDayOfYear(date, options) {\n  const _date = toDate(date, options?.in);\n  const diff = differenceInCalendarDays(_date, startOfYear(_date));\n  const dayOfYear = diff + 1;\n  return dayOfYear;\n}\n\n// Fallback for modularized imports:\nexport default getDayOfYear;\n","import { getTimezoneOffsetInMilliseconds } from \"./_lib/getTimezoneOffsetInMilliseconds.js\";\nimport { normalizeDates } from \"./_lib/normalizeDates.js\";\nimport { millisecondsInDay } from \"./constants.js\";\nimport { startOfDay } from \"./startOfDay.js\";\n\n/**\n * The {@link differenceInCalendarDays} function options.\n */\n\n/**\n * @name differenceInCalendarDays\n * @category Day Helpers\n * @summary Get the number of calendar days between the given dates.\n *\n * @description\n * Get the number of calendar days between the given dates. This means that the times are removed\n * from the dates and then the difference in days is calculated.\n *\n * @param laterDate - The later date\n * @param earlierDate - The earlier date\n * @param options - The options object\n *\n * @returns The number of calendar days\n *\n * @example\n * // How many calendar days are between\n * // 2 July 2011 23:00:00 and 2 July 2012 00:00:00?\n * const result = differenceInCalendarDays(\n *   new Date(2012, 6, 2, 0, 0),\n *   new Date(2011, 6, 2, 23, 0)\n * )\n * //=> 366\n * // How many calendar days are between\n * // 2 July 2011 23:59:00 and 3 July 2011 00:01:00?\n * const result = differenceInCalendarDays(\n *   new Date(2011, 6, 3, 0, 1),\n *   new Date(2011, 6, 2, 23, 59)\n * )\n * //=> 1\n */\nexport function differenceInCalendarDays(laterDate, earlierDate, options) {\n  const [laterDate_, earlierDate_] = normalizeDates(\n    options?.in,\n    laterDate,\n    earlierDate,\n  );\n\n  const laterStartOfDay = startOfDay(laterDate_);\n  const earlierStartOfDay = startOfDay(earlierDate_);\n\n  const laterTimestamp =\n    +laterStartOfDay - getTimezoneOffsetInMilliseconds(laterStartOfDay);\n  const earlierTimestamp =\n    +earlierStartOfDay - getTimezoneOffsetInMilliseconds(earlierStartOfDay);\n\n  // Round the number of days to the nearest integer because the number of\n  // milliseconds in a day is not constant (e.g. it's different in the week of\n  // the daylight saving time clock shift).\n  return Math.round((laterTimestamp - earlierTimestamp) / millisecondsInDay);\n}\n\n// Fallback for modularized imports:\nexport default differenceInCalendarDays;\n","import { constructFrom } from \"../constructFrom.js\";\n\nexport function normalizeDates(context, ...dates) {\n  const normalize = constructFrom.bind(\n    null,\n    context || dates.find((date) => typeof date === \"object\"),\n  );\n  return dates.map(normalize);\n}\n","import { toDate } from \"./toDate.js\";\n\n/**\n * The {@link startOfYear} function options.\n */\n\n/**\n * @name startOfYear\n * @category Year Helpers\n * @summary Return the start of a year for the given date.\n *\n * @description\n * Return the start of a year for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - The options\n *\n * @returns The start of a year\n *\n * @example\n * // The start of a year for 2 September 2014 11:55:00:\n * const result = startOfYear(new Date(2014, 8, 2, 11, 55, 00))\n * //=> Wed Jan 01 2014 00:00:00\n */\nexport function startOfYear(date, options) {\n  const date_ = toDate(date, options?.in);\n  date_.setFullYear(date_.getFullYear(), 0, 1);\n  date_.setHours(0, 0, 0, 0);\n  return date_;\n}\n\n// Fallback for modularized imports:\nexport default startOfYear;\n","import { getDefaultOptions } from \"./_lib/defaultOptions.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link startOfWeek} function options.\n */\n\n/**\n * @name startOfWeek\n * @category Week Helpers\n * @summary Return the start of a week for the given date.\n *\n * @description\n * Return the start of a week for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of a week\n *\n * @example\n * // The start of a week for 2 September 2014 11:55:00:\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sun Aug 31 2014 00:00:00\n *\n * @example\n * // If the week starts on Monday, the start of the week for 2 September 2014 11:55:00:\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })\n * //=> Mon Sep 01 2014 00:00:00\n */\nexport function startOfWeek(date, options) {\n  const defaultOptions = getDefaultOptions();\n  const weekStartsOn =\n    options?.weekStartsOn ??\n    options?.locale?.options?.weekStartsOn ??\n    defaultOptions.weekStartsOn ??\n    defaultOptions.locale?.options?.weekStartsOn ??\n    0;\n\n  const _date = toDate(date, options?.in);\n  const day = _date.getDay();\n  const diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n\n  _date.setDate(_date.getDate() - diff);\n  _date.setHours(0, 0, 0, 0);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfWeek;\n","import { startOfWeek } from \"./startOfWeek.js\";\n\n/**\n * The {@link startOfISOWeek} function options.\n */\n\n/**\n * @name startOfISOWeek\n * @category ISO Week Helpers\n * @summary Return the start of an ISO week for the given date.\n *\n * @description\n * Return the start of an ISO week for the given date.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of an ISO week\n *\n * @example\n * // The start of an ISO week for 2 September 2014 11:55:00:\n * const result = startOfISOWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Mon Sep 01 2014 00:00:00\n */\nexport function startOfISOWeek(date, options) {\n  return startOfWeek(date, { ...options, weekStartsOn: 1 });\n}\n\n// Fallback for modularized imports:\nexport default startOfISOWeek;\n","import { constructFrom } from \"./constructFrom.js\";\nimport { startOfISOWeek } from \"./startOfISOWeek.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link getISOWeekYear} function options.\n */\n\n/**\n * @name getISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Get the ISO week-numbering year of the given date.\n *\n * @description\n * Get the ISO week-numbering year of the given date,\n * which always starts 3 days before the year's first Thursday.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param date - The given date\n *\n * @returns The ISO week-numbering year\n *\n * @example\n * // Which ISO-week numbering year is 2 January 2005?\n * const result = getISOWeekYear(new Date(2005, 0, 2))\n * //=> 2004\n */\nexport function getISOWeekYear(date, options) {\n  const _date = toDate(date, options?.in);\n  const year = _date.getFullYear();\n\n  const fourthOfJanuaryOfNextYear = constructFrom(_date, 0);\n  fourthOfJanuaryOfNextYear.setFullYear(year + 1, 0, 4);\n  fourthOfJanuaryOfNextYear.setHours(0, 0, 0, 0);\n  const startOfNextYear = startOfISOWeek(fourthOfJanuaryOfNextYear);\n\n  const fourthOfJanuaryOfThisYear = constructFrom(_date, 0);\n  fourthOfJanuaryOfThisYear.setFullYear(year, 0, 4);\n  fourthOfJanuaryOfThisYear.setHours(0, 0, 0, 0);\n  const startOfThisYear = startOfISOWeek(fourthOfJanuaryOfThisYear);\n\n  if (_date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (_date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}\n\n// Fallback for modularized imports:\nexport default getISOWeekYear;\n","import { millisecondsInWeek } from \"./constants.js\";\nimport { startOfISOWeek } from \"./startOfISOWeek.js\";\nimport { startOfISOWeekYear } from \"./startOfISOWeekYear.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link getISOWeek} function options.\n */\n\n/**\n * @name getISOWeek\n * @category ISO Week Helpers\n * @summary Get the ISO week of the given date.\n *\n * @description\n * Get the ISO week of the given date.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param date - The given date\n * @param options - The options\n *\n * @returns The ISO week\n *\n * @example\n * // Which week of the ISO-week numbering year is 2 January 2005?\n * const result = getISOWeek(new Date(2005, 0, 2))\n * //=> 53\n */\nexport function getISOWeek(date, options) {\n  const _date = toDate(date, options?.in);\n  const diff = +startOfISOWeek(_date) - +startOfISOWeekYear(_date);\n\n  // Round the number of weeks to the nearest integer because the number of\n  // milliseconds in a week is not constant (e.g. it's different in the week of\n  // the daylight saving time clock shift).\n  return Math.round(diff / millisecondsInWeek) + 1;\n}\n\n// Fallback for modularized imports:\nexport default getISOWeek;\n","import { constructFrom } from \"./constructFrom.js\";\nimport { getISOWeekYear } from \"./getISOWeekYear.js\";\nimport { startOfISOWeek } from \"./startOfISOWeek.js\";\n\n/**\n * The {@link startOfISOWeekYear} function options.\n */\n\n/**\n * @name startOfISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Return the start of an ISO week-numbering year for the given date.\n *\n * @description\n * Return the start of an ISO week-numbering year,\n * which always starts 3 days before the year's first Thursday.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of an ISO week-numbering year\n *\n * @example\n * // The start of an ISO week-numbering year for 2 July 2005:\n * const result = startOfISOWeekYear(new Date(2005, 6, 2))\n * //=> Mon Jan 03 2005 00:00:00\n */\nexport function startOfISOWeekYear(date, options) {\n  const year = getISOWeekYear(date, options);\n  const fourthOfJanuary = constructFrom(options?.in || date, 0);\n  fourthOfJanuary.setFullYear(year, 0, 4);\n  fourthOfJanuary.setHours(0, 0, 0, 0);\n  return startOfISOWeek(fourthOfJanuary);\n}\n\n// Fallback for modularized imports:\nexport default startOfISOWeekYear;\n","import { getDefaultOptions } from \"./_lib/defaultOptions.js\";\nimport { constructFrom } from \"./constructFrom.js\";\nimport { startOfWeek } from \"./startOfWeek.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link getWeekYear} function options.\n */\n\n/**\n * @name getWeekYear\n * @category Week-Numbering Year Helpers\n * @summary Get the local week-numbering year of the given date.\n *\n * @description\n * Get the local week-numbering year of the given date.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @param date - The given date\n * @param options - An object with options.\n *\n * @returns The local week-numbering year\n *\n * @example\n * // Which week numbering year is 26 December 2004 with the default settings?\n * const result = getWeekYear(new Date(2004, 11, 26))\n * //=> 2005\n *\n * @example\n * // Which week numbering year is 26 December 2004 if week starts on Saturday?\n * const result = getWeekYear(new Date(2004, 11, 26), { weekStartsOn: 6 })\n * //=> 2004\n *\n * @example\n * // Which week numbering year is 26 December 2004 if the first week contains 4 January?\n * const result = getWeekYear(new Date(2004, 11, 26), { firstWeekContainsDate: 4 })\n * //=> 2004\n */\nexport function getWeekYear(date, options) {\n  const _date = toDate(date, options?.in);\n  const year = _date.getFullYear();\n\n  const defaultOptions = getDefaultOptions();\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const firstWeekOfNextYear = constructFrom(options?.in || date, 0);\n  firstWeekOfNextYear.setFullYear(year + 1, 0, firstWeekContainsDate);\n  firstWeekOfNextYear.setHours(0, 0, 0, 0);\n  const startOfNextYear = startOfWeek(firstWeekOfNextYear, options);\n\n  const firstWeekOfThisYear = constructFrom(options?.in || date, 0);\n  firstWeekOfThisYear.setFullYear(year, 0, firstWeekContainsDate);\n  firstWeekOfThisYear.setHours(0, 0, 0, 0);\n  const startOfThisYear = startOfWeek(firstWeekOfThisYear, options);\n\n  if (+_date >= +startOfNextYear) {\n    return year + 1;\n  } else if (+_date >= +startOfThisYear) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}\n\n// Fallback for modularized imports:\nexport default getWeekYear;\n","import { millisecondsInWeek } from \"./constants.js\";\nimport { startOfWeek } from \"./startOfWeek.js\";\nimport { startOfWeekYear } from \"./startOfWeekYear.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link getWeek} function options.\n */\n\n/**\n * @name getWeek\n * @category Week Helpers\n * @summary Get the local week index of the given date.\n *\n * @description\n * Get the local week index of the given date.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @param date - The given date\n * @param options - An object with options\n *\n * @returns The week\n *\n * @example\n * // Which week of the local week numbering year is 2 January 2005 with default options?\n * const result = getWeek(new Date(2005, 0, 2))\n * //=> 2\n *\n * @example\n * // Which week of the local week numbering year is 2 January 2005,\n * // if Monday is the first day of the week,\n * // and the first week of the year always contains 4 January?\n * const result = getWeek(new Date(2005, 0, 2), {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> 53\n */\nexport function getWeek(date, options) {\n  const _date = toDate(date, options?.in);\n  const diff = +startOfWeek(_date, options) - +startOfWeekYear(_date, options);\n\n  // Round the number of weeks to the nearest integer because the number of\n  // milliseconds in a week is not constant (e.g. it's different in the week of\n  // the daylight saving time clock shift).\n  return Math.round(diff / millisecondsInWeek) + 1;\n}\n\n// Fallback for modularized imports:\nexport default getWeek;\n","import { getDefaultOptions } from \"./_lib/defaultOptions.js\";\nimport { constructFrom } from \"./constructFrom.js\";\nimport { getWeekYear } from \"./getWeekYear.js\";\nimport { startOfWeek } from \"./startOfWeek.js\";\n\n/**\n * The {@link startOfWeekYear} function options.\n */\n\n/**\n * @name startOfWeekYear\n * @category Week-Numbering Year Helpers\n * @summary Return the start of a local week-numbering year for the given date.\n *\n * @description\n * Return the start of a local week-numbering year.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of a week-numbering year\n *\n * @example\n * // The start of an a week-numbering year for 2 July 2005 with default settings:\n * const result = startOfWeekYear(new Date(2005, 6, 2))\n * //=> Sun Dec 26 2004 00:00:00\n *\n * @example\n * // The start of a week-numbering year for 2 July 2005\n * // if Monday is the first day of week\n * // and 4 January is always in the first week of the year:\n * const result = startOfWeekYear(new Date(2005, 6, 2), {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> Mon Jan 03 2005 00:00:00\n */\nexport function startOfWeekYear(date, options) {\n  const defaultOptions = getDefaultOptions();\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const year = getWeekYear(date, options);\n  const firstWeek = constructFrom(options?.in || date, 0);\n  firstWeek.setFullYear(year, 0, firstWeekContainsDate);\n  firstWeek.setHours(0, 0, 0, 0);\n  const _date = startOfWeek(firstWeek, options);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfWeekYear;\n","export function addLeadingZeros(number, targetLength) {\n  const sign = number < 0 ? \"-\" : \"\";\n  const output = Math.abs(number).toString().padStart(targetLength, \"0\");\n  return sign + output;\n}\n","import { addLeadingZeros } from \"../addLeadingZeros.js\";\n\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* |                                |\n * |  d  | Day of month                   |  D  |                                |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  m  | Minute                         |  M  | Month                          |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  y  | Year (abs)                     |  Y  |                                |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n */\n\nexport const lightFormatters = {\n  // Year\n  y(date, token) {\n    // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_tokens\n    // | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n    // |----------|-------|----|-------|-------|-------|\n    // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n    // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n    // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n    // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n    // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\n\n    const signedYear = date.getFullYear();\n    // Returns 1 for 1 BC (which is year 0 in JavaScript)\n    const year = signedYear > 0 ? signedYear : 1 - signedYear;\n    return addLeadingZeros(token === \"yy\" ? year % 100 : year, token.length);\n  },\n\n  // Month\n  M(date, token) {\n    const month = date.getMonth();\n    return token === \"M\" ? String(month + 1) : addLeadingZeros(month + 1, 2);\n  },\n\n  // Day of the month\n  d(date, token) {\n    return addLeadingZeros(date.getDate(), token.length);\n  },\n\n  // AM or PM\n  a(date, token) {\n    const dayPeriodEnumValue = date.getHours() / 12 >= 1 ? \"pm\" : \"am\";\n\n    switch (token) {\n      case \"a\":\n      case \"aa\":\n        return dayPeriodEnumValue.toUpperCase();\n      case \"aaa\":\n        return dayPeriodEnumValue;\n      case \"aaaaa\":\n        return dayPeriodEnumValue[0];\n      case \"aaaa\":\n      default:\n        return dayPeriodEnumValue === \"am\" ? \"a.m.\" : \"p.m.\";\n    }\n  },\n\n  // Hour [1-12]\n  h(date, token) {\n    return addLeadingZeros(date.getHours() % 12 || 12, token.length);\n  },\n\n  // Hour [0-23]\n  H(date, token) {\n    return addLeadingZeros(date.getHours(), token.length);\n  },\n\n  // Minute\n  m(date, token) {\n    return addLeadingZeros(date.getMinutes(), token.length);\n  },\n\n  // Second\n  s(date, token) {\n    return addLeadingZeros(date.getSeconds(), token.length);\n  },\n\n  // Fraction of second\n  S(date, token) {\n    const numberOfDigits = token.length;\n    const milliseconds = date.getMilliseconds();\n    const fractionalSeconds = Math.trunc(\n      milliseconds * Math.pow(10, numberOfDigits - 3),\n    );\n    return addLeadingZeros(fractionalSeconds, token.length);\n  },\n};\n","import { getDayOfYear } from \"../../getDayOfYear.js\";\nimport { getISOWeek } from \"../../getISOWeek.js\";\nimport { getISOWeekYear } from \"../../getISOWeekYear.js\";\nimport { getWeek } from \"../../getWeek.js\";\nimport { getWeekYear } from \"../../getWeekYear.js\";\n\nimport { addLeadingZeros } from \"../addLeadingZeros.js\";\nimport { lightFormatters } from \"./lightFormatters.js\";\n\nconst dayPeriodEnum = {\n  am: \"am\",\n  pm: \"pm\",\n  midnight: \"midnight\",\n  noon: \"noon\",\n  morning: \"morning\",\n  afternoon: \"afternoon\",\n  evening: \"evening\",\n  night: \"night\",\n};\n\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* | Milliseconds in day            |\n * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\n * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\n * |  d  | Day of month                   |  D  | Day of year                    |\n * |  e  | Local day of week              |  E  | Day of week                    |\n * |  f  |                                |  F* | Day of week in month           |\n * |  g* | Modified Julian day            |  G  | Era                            |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  i! | ISO day of week                |  I! | ISO week of year               |\n * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\n * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\n * |  l* | (deprecated)                   |  L  | Stand-alone month              |\n * |  m  | Minute                         |  M  | Month                          |\n * |  n  |                                |  N  |                                |\n * |  o! | Ordinal number modifier        |  O  | Timezone (GMT)                 |\n * |  p! | Long localized time            |  P! | Long localized date            |\n * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\n * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\n * |  u  | Extended year                  |  U* | Cyclic year                    |\n * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\n * |  w  | Local week of year             |  W* | Week of month                  |\n * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\n * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\n * |  z  | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n *\n * Letters marked by ! are non-standard, but implemented by date-fns:\n * - `o` modifies the previous token to turn it into an ordinal (see `format` docs)\n * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\n *   i.e. 7 for Sunday, 1 for Monday, etc.\n * - `I` is ISO week of year, as opposed to `w` which is local week of year.\n * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\n *   `R` is supposed to be used in conjunction with `I` and `i`\n *   for universal ISO week-numbering date, whereas\n *   `Y` is supposed to be used in conjunction with `w` and `e`\n *   for week-numbering date specific to the locale.\n * - `P` is long localized date format\n * - `p` is long localized time format\n */\n\nexport const formatters = {\n  // Era\n  G: function (date, token, localize) {\n    const era = date.getFullYear() > 0 ? 1 : 0;\n    switch (token) {\n      // AD, BC\n      case \"G\":\n      case \"GG\":\n      case \"GGG\":\n        return localize.era(era, { width: \"abbreviated\" });\n      // A, B\n      case \"GGGGG\":\n        return localize.era(era, { width: \"narrow\" });\n      // Anno Domini, Before Christ\n      case \"GGGG\":\n      default:\n        return localize.era(era, { width: \"wide\" });\n    }\n  },\n\n  // Year\n  y: function (date, token, localize) {\n    // Ordinal number\n    if (token === \"yo\") {\n      const signedYear = date.getFullYear();\n      // Returns 1 for 1 BC (which is year 0 in JavaScript)\n      const year = signedYear > 0 ? signedYear : 1 - signedYear;\n      return localize.ordinalNumber(year, { unit: \"year\" });\n    }\n\n    return lightFormatters.y(date, token);\n  },\n\n  // Local week-numbering year\n  Y: function (date, token, localize, options) {\n    const signedWeekYear = getWeekYear(date, options);\n    // Returns 1 for 1 BC (which is year 0 in JavaScript)\n    const weekYear = signedWeekYear > 0 ? signedWeekYear : 1 - signedWeekYear;\n\n    // Two digit year\n    if (token === \"YY\") {\n      const twoDigitYear = weekYear % 100;\n      return addLeadingZeros(twoDigitYear, 2);\n    }\n\n    // Ordinal number\n    if (token === \"Yo\") {\n      return localize.ordinalNumber(weekYear, { unit: \"year\" });\n    }\n\n    // Padding\n    return addLeadingZeros(weekYear, token.length);\n  },\n\n  // ISO week-numbering year\n  R: function (date, token) {\n    const isoWeekYear = getISOWeekYear(date);\n\n    // Padding\n    return addLeadingZeros(isoWeekYear, token.length);\n  },\n\n  // Extended year. This is a single number designating the year of this calendar system.\n  // The main difference between `y` and `u` localizers are B.C. years:\n  // | Year | `y` | `u` |\n  // |------|-----|-----|\n  // | AC 1 |   1 |   1 |\n  // | BC 1 |   1 |   0 |\n  // | BC 2 |   2 |  -1 |\n  // Also `yy` always returns the last two digits of a year,\n  // while `uu` pads single digit years to 2 characters and returns other years unchanged.\n  u: function (date, token) {\n    const year = date.getFullYear();\n    return addLeadingZeros(year, token.length);\n  },\n\n  // Quarter\n  Q: function (date, token, localize) {\n    const quarter = Math.ceil((date.getMonth() + 1) / 3);\n    switch (token) {\n      // 1, 2, 3, 4\n      case \"Q\":\n        return String(quarter);\n      // 01, 02, 03, 04\n      case \"QQ\":\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n      case \"Qo\":\n        return localize.ordinalNumber(quarter, { unit: \"quarter\" });\n      // Q1, Q2, Q3, Q4\n      case \"QQQ\":\n        return localize.quarter(quarter, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case \"QQQQQ\":\n        return localize.quarter(quarter, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // 1st quarter, 2nd quarter, ...\n      case \"QQQQ\":\n      default:\n        return localize.quarter(quarter, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Stand-alone quarter\n  q: function (date, token, localize) {\n    const quarter = Math.ceil((date.getMonth() + 1) / 3);\n    switch (token) {\n      // 1, 2, 3, 4\n      case \"q\":\n        return String(quarter);\n      // 01, 02, 03, 04\n      case \"qq\":\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n      case \"qo\":\n        return localize.ordinalNumber(quarter, { unit: \"quarter\" });\n      // Q1, Q2, Q3, Q4\n      case \"qqq\":\n        return localize.quarter(quarter, {\n          width: \"abbreviated\",\n          context: \"standalone\",\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case \"qqqqq\":\n        return localize.quarter(quarter, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // 1st quarter, 2nd quarter, ...\n      case \"qqqq\":\n      default:\n        return localize.quarter(quarter, {\n          width: \"wide\",\n          context: \"standalone\",\n        });\n    }\n  },\n\n  // Month\n  M: function (date, token, localize) {\n    const month = date.getMonth();\n    switch (token) {\n      case \"M\":\n      case \"MM\":\n        return lightFormatters.M(date, token);\n      // 1st, 2nd, ..., 12th\n      case \"Mo\":\n        return localize.ordinalNumber(month + 1, { unit: \"month\" });\n      // Jan, Feb, ..., Dec\n      case \"MMM\":\n        return localize.month(month, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // J, F, ..., D\n      case \"MMMMM\":\n        return localize.month(month, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // January, February, ..., December\n      case \"MMMM\":\n      default:\n        return localize.month(month, { width: \"wide\", context: \"formatting\" });\n    }\n  },\n\n  // Stand-alone month\n  L: function (date, token, localize) {\n    const month = date.getMonth();\n    switch (token) {\n      // 1, 2, ..., 12\n      case \"L\":\n        return String(month + 1);\n      // 01, 02, ..., 12\n      case \"LL\":\n        return addLeadingZeros(month + 1, 2);\n      // 1st, 2nd, ..., 12th\n      case \"Lo\":\n        return localize.ordinalNumber(month + 1, { unit: \"month\" });\n      // Jan, Feb, ..., Dec\n      case \"LLL\":\n        return localize.month(month, {\n          width: \"abbreviated\",\n          context: \"standalone\",\n        });\n      // J, F, ..., D\n      case \"LLLLL\":\n        return localize.month(month, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // January, February, ..., December\n      case \"LLLL\":\n      default:\n        return localize.month(month, { width: \"wide\", context: \"standalone\" });\n    }\n  },\n\n  // Local week of year\n  w: function (date, token, localize, options) {\n    const week = getWeek(date, options);\n\n    if (token === \"wo\") {\n      return localize.ordinalNumber(week, { unit: \"week\" });\n    }\n\n    return addLeadingZeros(week, token.length);\n  },\n\n  // ISO week of year\n  I: function (date, token, localize) {\n    const isoWeek = getISOWeek(date);\n\n    if (token === \"Io\") {\n      return localize.ordinalNumber(isoWeek, { unit: \"week\" });\n    }\n\n    return addLeadingZeros(isoWeek, token.length);\n  },\n\n  // Day of the month\n  d: function (date, token, localize) {\n    if (token === \"do\") {\n      return localize.ordinalNumber(date.getDate(), { unit: \"date\" });\n    }\n\n    return lightFormatters.d(date, token);\n  },\n\n  // Day of year\n  D: function (date, token, localize) {\n    const dayOfYear = getDayOfYear(date);\n\n    if (token === \"Do\") {\n      return localize.ordinalNumber(dayOfYear, { unit: \"dayOfYear\" });\n    }\n\n    return addLeadingZeros(dayOfYear, token.length);\n  },\n\n  // Day of week\n  E: function (date, token, localize) {\n    const dayOfWeek = date.getDay();\n    switch (token) {\n      // Tue\n      case \"E\":\n      case \"EE\":\n      case \"EEE\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // T\n      case \"EEEEE\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"EEEEEE\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\",\n        });\n      // Tuesday\n      case \"EEEE\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Local day of week\n  e: function (date, token, localize, options) {\n    const dayOfWeek = date.getDay();\n    const localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n    switch (token) {\n      // Numerical value (Nth day of week with current locale or weekStartsOn)\n      case \"e\":\n        return String(localDayOfWeek);\n      // Padded numerical value\n      case \"ee\":\n        return addLeadingZeros(localDayOfWeek, 2);\n      // 1st, 2nd, ..., 7th\n      case \"eo\":\n        return localize.ordinalNumber(localDayOfWeek, { unit: \"day\" });\n      case \"eee\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // T\n      case \"eeeee\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"eeeeee\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\",\n        });\n      // Tuesday\n      case \"eeee\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Stand-alone local day of week\n  c: function (date, token, localize, options) {\n    const dayOfWeek = date.getDay();\n    const localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n    switch (token) {\n      // Numerical value (same as in `e`)\n      case \"c\":\n        return String(localDayOfWeek);\n      // Padded numerical value\n      case \"cc\":\n        return addLeadingZeros(localDayOfWeek, token.length);\n      // 1st, 2nd, ..., 7th\n      case \"co\":\n        return localize.ordinalNumber(localDayOfWeek, { unit: \"day\" });\n      case \"ccc\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"standalone\",\n        });\n      // T\n      case \"ccccc\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // Tu\n      case \"cccccc\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"standalone\",\n        });\n      // Tuesday\n      case \"cccc\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"standalone\",\n        });\n    }\n  },\n\n  // ISO day of week\n  i: function (date, token, localize) {\n    const dayOfWeek = date.getDay();\n    const isoDayOfWeek = dayOfWeek === 0 ? 7 : dayOfWeek;\n    switch (token) {\n      // 2\n      case \"i\":\n        return String(isoDayOfWeek);\n      // 02\n      case \"ii\":\n        return addLeadingZeros(isoDayOfWeek, token.length);\n      // 2nd\n      case \"io\":\n        return localize.ordinalNumber(isoDayOfWeek, { unit: \"day\" });\n      // Tue\n      case \"iii\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // T\n      case \"iiiii\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"iiiiii\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\",\n        });\n      // Tuesday\n      case \"iiii\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // AM or PM\n  a: function (date, token, localize) {\n    const hours = date.getHours();\n    const dayPeriodEnumValue = hours / 12 >= 1 ? \"pm\" : \"am\";\n\n    switch (token) {\n      case \"a\":\n      case \"aa\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      case \"aaa\":\n        return localize\n          .dayPeriod(dayPeriodEnumValue, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          })\n          .toLowerCase();\n      case \"aaaaa\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"aaaa\":\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // AM, PM, midnight, noon\n  b: function (date, token, localize) {\n    const hours = date.getHours();\n    let dayPeriodEnumValue;\n    if (hours === 12) {\n      dayPeriodEnumValue = dayPeriodEnum.noon;\n    } else if (hours === 0) {\n      dayPeriodEnumValue = dayPeriodEnum.midnight;\n    } else {\n      dayPeriodEnumValue = hours / 12 >= 1 ? \"pm\" : \"am\";\n    }\n\n    switch (token) {\n      case \"b\":\n      case \"bb\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      case \"bbb\":\n        return localize\n          .dayPeriod(dayPeriodEnumValue, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          })\n          .toLowerCase();\n      case \"bbbbb\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"bbbb\":\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // in the morning, in the afternoon, in the evening, at night\n  B: function (date, token, localize) {\n    const hours = date.getHours();\n    let dayPeriodEnumValue;\n    if (hours >= 17) {\n      dayPeriodEnumValue = dayPeriodEnum.evening;\n    } else if (hours >= 12) {\n      dayPeriodEnumValue = dayPeriodEnum.afternoon;\n    } else if (hours >= 4) {\n      dayPeriodEnumValue = dayPeriodEnum.morning;\n    } else {\n      dayPeriodEnumValue = dayPeriodEnum.night;\n    }\n\n    switch (token) {\n      case \"B\":\n      case \"BB\":\n      case \"BBB\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      case \"BBBBB\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"BBBB\":\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Hour [1-12]\n  h: function (date, token, localize) {\n    if (token === \"ho\") {\n      let hours = date.getHours() % 12;\n      if (hours === 0) hours = 12;\n      return localize.ordinalNumber(hours, { unit: \"hour\" });\n    }\n\n    return lightFormatters.h(date, token);\n  },\n\n  // Hour [0-23]\n  H: function (date, token, localize) {\n    if (token === \"Ho\") {\n      return localize.ordinalNumber(date.getHours(), { unit: \"hour\" });\n    }\n\n    return lightFormatters.H(date, token);\n  },\n\n  // Hour [0-11]\n  K: function (date, token, localize) {\n    const hours = date.getHours() % 12;\n\n    if (token === \"Ko\") {\n      return localize.ordinalNumber(hours, { unit: \"hour\" });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n\n  // Hour [1-24]\n  k: function (date, token, localize) {\n    let hours = date.getHours();\n    if (hours === 0) hours = 24;\n\n    if (token === \"ko\") {\n      return localize.ordinalNumber(hours, { unit: \"hour\" });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n\n  // Minute\n  m: function (date, token, localize) {\n    if (token === \"mo\") {\n      return localize.ordinalNumber(date.getMinutes(), { unit: \"minute\" });\n    }\n\n    return lightFormatters.m(date, token);\n  },\n\n  // Second\n  s: function (date, token, localize) {\n    if (token === \"so\") {\n      return localize.ordinalNumber(date.getSeconds(), { unit: \"second\" });\n    }\n\n    return lightFormatters.s(date, token);\n  },\n\n  // Fraction of second\n  S: function (date, token) {\n    return lightFormatters.S(date, token);\n  },\n\n  // Timezone (ISO-8601. If offset is 0, output is always `'Z'`)\n  X: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    if (timezoneOffset === 0) {\n      return \"Z\";\n    }\n\n    switch (token) {\n      // Hours and optional minutes\n      case \"X\":\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XX`\n      case \"XXXX\":\n      case \"XX\": // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XXX`\n      case \"XXXXX\":\n      case \"XXX\": // Hours and minutes with `:` delimiter\n      default:\n        return formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Timezone (ISO-8601. If offset is 0, output is `'+00:00'` or equivalent)\n  x: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    switch (token) {\n      // Hours and optional minutes\n      case \"x\":\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xx`\n      case \"xxxx\":\n      case \"xx\": // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xxx`\n      case \"xxxxx\":\n      case \"xxx\": // Hours and minutes with `:` delimiter\n      default:\n        return formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Timezone (GMT)\n  O: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case \"O\":\n      case \"OO\":\n      case \"OOO\":\n        return \"GMT\" + formatTimezoneShort(timezoneOffset, \":\");\n      // Long\n      case \"OOOO\":\n      default:\n        return \"GMT\" + formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Timezone (specific non-location)\n  z: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case \"z\":\n      case \"zz\":\n      case \"zzz\":\n        return \"GMT\" + formatTimezoneShort(timezoneOffset, \":\");\n      // Long\n      case \"zzzz\":\n      default:\n        return \"GMT\" + formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Seconds timestamp\n  t: function (date, token, _localize) {\n    const timestamp = Math.trunc(+date / 1000);\n    return addLeadingZeros(timestamp, token.length);\n  },\n\n  // Milliseconds timestamp\n  T: function (date, token, _localize) {\n    return addLeadingZeros(+date, token.length);\n  },\n};\n\nfunction formatTimezoneShort(offset, delimiter = \"\") {\n  const sign = offset > 0 ? \"-\" : \"+\";\n  const absOffset = Math.abs(offset);\n  const hours = Math.trunc(absOffset / 60);\n  const minutes = absOffset % 60;\n  if (minutes === 0) {\n    return sign + String(hours);\n  }\n  return sign + String(hours) + delimiter + addLeadingZeros(minutes, 2);\n}\n\nfunction formatTimezoneWithOptionalMinutes(offset, delimiter) {\n  if (offset % 60 === 0) {\n    const sign = offset > 0 ? \"-\" : \"+\";\n    return sign + addLeadingZeros(Math.abs(offset) / 60, 2);\n  }\n  return formatTimezone(offset, delimiter);\n}\n\nfunction formatTimezone(offset, delimiter = \"\") {\n  const sign = offset > 0 ? \"-\" : \"+\";\n  const absOffset = Math.abs(offset);\n  const hours = addLeadingZeros(Math.trunc(absOffset / 60), 2);\n  const minutes = addLeadingZeros(absOffset % 60, 2);\n  return sign + hours + delimiter + minutes;\n}\n","const dateLongFormatter = (pattern, formatLong) => {\n  switch (pattern) {\n    case \"P\":\n      return formatLong.date({ width: \"short\" });\n    case \"PP\":\n      return formatLong.date({ width: \"medium\" });\n    case \"PPP\":\n      return formatLong.date({ width: \"long\" });\n    case \"PPPP\":\n    default:\n      return formatLong.date({ width: \"full\" });\n  }\n};\n\nconst timeLongFormatter = (pattern, formatLong) => {\n  switch (pattern) {\n    case \"p\":\n      return formatLong.time({ width: \"short\" });\n    case \"pp\":\n      return formatLong.time({ width: \"medium\" });\n    case \"ppp\":\n      return formatLong.time({ width: \"long\" });\n    case \"pppp\":\n    default:\n      return formatLong.time({ width: \"full\" });\n  }\n};\n\nconst dateTimeLongFormatter = (pattern, formatLong) => {\n  const matchResult = pattern.match(/(P+)(p+)?/) || [];\n  const datePattern = matchResult[1];\n  const timePattern = matchResult[2];\n\n  if (!timePattern) {\n    return dateLongFormatter(pattern, formatLong);\n  }\n\n  let dateTimeFormat;\n\n  switch (datePattern) {\n    case \"P\":\n      dateTimeFormat = formatLong.dateTime({ width: \"short\" });\n      break;\n    case \"PP\":\n      dateTimeFormat = formatLong.dateTime({ width: \"medium\" });\n      break;\n    case \"PPP\":\n      dateTimeFormat = formatLong.dateTime({ width: \"long\" });\n      break;\n    case \"PPPP\":\n    default:\n      dateTimeFormat = formatLong.dateTime({ width: \"full\" });\n      break;\n  }\n\n  return dateTimeFormat\n    .replace(\"{{date}}\", dateLongFormatter(datePattern, formatLong))\n    .replace(\"{{time}}\", timeLongFormatter(timePattern, formatLong));\n};\n\nexport const longFormatters = {\n  p: timeLongFormatter,\n  P: dateTimeLongFormatter,\n};\n","const dayOfYearTokenRE = /^D+$/;\nconst weekYearTokenRE = /^Y+$/;\n\nconst throwTokens = [\"D\", \"DD\", \"YY\", \"YYYY\"];\n\nexport function isProtectedDayOfYearToken(token) {\n  return dayOfYearTokenRE.test(token);\n}\n\nexport function isProtectedWeekYearToken(token) {\n  return weekYearTokenRE.test(token);\n}\n\nexport function warnOrThrowProtectedError(token, format, input) {\n  const _message = message(token, format, input);\n  console.warn(_message);\n  if (throwTokens.includes(token)) throw new RangeError(_message);\n}\n\nfunction message(token, format, input) {\n  const subject = token[0] === \"Y\" ? \"years\" : \"days of the month\";\n  return `Use \\`${token.toLowerCase()}\\` instead of \\`${token}\\` (in \\`${format}\\`) for formatting ${subject} to the input \\`${input}\\`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md`;\n}\n","import { isDate } from \"./isDate.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * @name isValid\n * @category Common Helpers\n * @summary Is the given date valid?\n *\n * @description\n * Returns false if argument is Invalid Date and true otherwise.\n * Argument is converted to Date using `toDate`. See [toDate](https://date-fns.org/docs/toDate)\n * Invalid Date is a Date, whose time value is NaN.\n *\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * @param date - The date to check\n *\n * @returns The date is valid\n *\n * @example\n * // For the valid date:\n * const result = isValid(new Date(2014, 1, 31))\n * //=> true\n *\n * @example\n * // For the value, convertible into a date:\n * const result = isValid(1393804800000)\n * //=> true\n *\n * @example\n * // For the invalid date:\n * const result = isValid(new Date(''))\n * //=> false\n */\nexport function isValid(date) {\n  return !((!isDate(date) && typeof date !== \"number\") || isNaN(+toDate(date)));\n}\n\n// Fallback for modularized imports:\nexport default isValid;\n","/**\n * @name isDate\n * @category Common Helpers\n * @summary Is the given value a date?\n *\n * @description\n * Returns true if the given value is an instance of Date. The function works for dates transferred across iframes.\n *\n * @param value - The value to check\n *\n * @returns True if the given value is a date\n *\n * @example\n * // For a valid date:\n * const result = isDate(new Date())\n * //=> true\n *\n * @example\n * // For an invalid date:\n * const result = isDate(new Date(NaN))\n * //=> true\n *\n * @example\n * // For some value:\n * const result = isDate('2014-02-31')\n * //=> false\n *\n * @example\n * // For an object:\n * const result = isDate({})\n * //=> false\n */\nexport function isDate(value) {\n  return (\n    value instanceof Date ||\n    (typeof value === \"object\" &&\n      Object.prototype.toString.call(value) === \"[object Date]\")\n  );\n}\n\n// Fallback for modularized imports:\nexport default isDate;\n","import { defaultLocale } from \"./_lib/defaultLocale.js\";\nimport { getDefaultOptions } from \"./_lib/defaultOptions.js\";\nimport { formatters } from \"./_lib/format/formatters.js\";\nimport { longFormatters } from \"./_lib/format/longFormatters.js\";\nimport {\n  isProtectedDayOfYearToken,\n  isProtectedWeekYearToken,\n  warnOrThrowProtectedError,\n} from \"./_lib/protectedTokens.js\";\nimport { isValid } from \"./isValid.js\";\nimport { toDate } from \"./toDate.js\";\n\n// Rexports of internal for libraries to use.\n// See: https://github.com/date-fns/date-fns/issues/3638#issuecomment-1877082874\nexport { formatters, longFormatters };\n\n// This RegExp consists of three parts separated by `|`:\n// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token\n//   (one of the certain letters followed by `o`)\n// - (\\w)\\1* matches any sequences of the same letter\n// - '' matches two quote characters in a row\n// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),\n//   except a single quote symbol, which ends the sequence.\n//   Two quote characters do not end the sequence.\n//   If there is no matching single quote\n//   then the sequence will continue until the end of the string.\n// - . matches any single character unmatched by previous parts of the RegExps\nconst formattingTokensRegExp =\n  /[yYQqMLwIdDecihHKkms]o|(\\w)\\1*|''|'(''|[^'])+('|$)|./g;\n\n// This RegExp catches symbols escaped by quotes, and also\n// sequences of symbols P, p, and the combinations like `PPPPPPPppppp`\nconst longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;\n\nconst escapedStringRegExp = /^'([^]*?)'?$/;\nconst doubleQuoteRegExp = /''/g;\nconst unescapedLatinCharacterRegExp = /[a-zA-Z]/;\n\nexport { format as formatDate };\n\n/**\n * The {@link format} function options.\n */\n\n/**\n * @name format\n * @alias formatDate\n * @category Common Helpers\n * @summary Format the date.\n *\n * @description\n * Return the formatted date string in the given format. The result may vary by locale.\n *\n * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.\n * > See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * The characters wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n * (see the last example)\n *\n * Format of the string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * with a few additions (see note 7 below the table).\n *\n * Accepted patterns:\n * | Unit                            | Pattern | Result examples                   | Notes |\n * |---------------------------------|---------|-----------------------------------|-------|\n * | Era                             | G..GGG  | AD, BC                            |       |\n * |                                 | GGGG    | Anno Domini, Before Christ        | 2     |\n * |                                 | GGGGG   | A, B                              |       |\n * | Calendar year                   | y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | yo      | 44th, 1st, 0th, 17th              | 5,7   |\n * |                                 | yy      | 44, 01, 00, 17                    | 5     |\n * |                                 | yyy     | 044, 001, 1900, 2017              | 5     |\n * |                                 | yyyy    | 0044, 0001, 1900, 2017            | 5     |\n * |                                 | yyyyy   | ...                               | 3,5   |\n * | Local week-numbering year       | Y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | Yo      | 44th, 1st, 1900th, 2017th         | 5,7   |\n * |                                 | YY      | 44, 01, 00, 17                    | 5,8   |\n * |                                 | YYY     | 044, 001, 1900, 2017              | 5     |\n * |                                 | YYYY    | 0044, 0001, 1900, 2017            | 5,8   |\n * |                                 | YYYYY   | ...                               | 3,5   |\n * | ISO week-numbering year         | R       | -43, 0, 1, 1900, 2017             | 5,7   |\n * |                                 | RR      | -43, 00, 01, 1900, 2017           | 5,7   |\n * |                                 | RRR     | -043, 000, 001, 1900, 2017        | 5,7   |\n * |                                 | RRRR    | -0043, 0000, 0001, 1900, 2017     | 5,7   |\n * |                                 | RRRRR   | ...                               | 3,5,7 |\n * | Extended year                   | u       | -43, 0, 1, 1900, 2017             | 5     |\n * |                                 | uu      | -43, 01, 1900, 2017               | 5     |\n * |                                 | uuu     | -043, 001, 1900, 2017             | 5     |\n * |                                 | uuuu    | -0043, 0001, 1900, 2017           | 5     |\n * |                                 | uuuuu   | ...                               | 3,5   |\n * | Quarter (formatting)            | Q       | 1, 2, 3, 4                        |       |\n * |                                 | Qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | QQ      | 01, 02, 03, 04                    |       |\n * |                                 | QQQ     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | QQQQQ   | 1, 2, 3, 4                        | 4     |\n * | Quarter (stand-alone)           | q       | 1, 2, 3, 4                        |       |\n * |                                 | qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | qq      | 01, 02, 03, 04                    |       |\n * |                                 | qqq     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | qqqqq   | 1, 2, 3, 4                        | 4     |\n * | Month (formatting)              | M       | 1, 2, ..., 12                     |       |\n * |                                 | Mo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | MM      | 01, 02, ..., 12                   |       |\n * |                                 | MMM     | Jan, Feb, ..., Dec                |       |\n * |                                 | MMMM    | January, February, ..., December  | 2     |\n * |                                 | MMMMM   | J, F, ..., D                      |       |\n * | Month (stand-alone)             | L       | 1, 2, ..., 12                     |       |\n * |                                 | Lo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | LL      | 01, 02, ..., 12                   |       |\n * |                                 | LLL     | Jan, Feb, ..., Dec                |       |\n * |                                 | LLLL    | January, February, ..., December  | 2     |\n * |                                 | LLLLL   | J, F, ..., D                      |       |\n * | Local week of year              | w       | 1, 2, ..., 53                     |       |\n * |                                 | wo      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | ww      | 01, 02, ..., 53                   |       |\n * | ISO week of year                | I       | 1, 2, ..., 53                     | 7     |\n * |                                 | Io      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | II      | 01, 02, ..., 53                   | 7     |\n * | Day of month                    | d       | 1, 2, ..., 31                     |       |\n * |                                 | do      | 1st, 2nd, ..., 31st               | 7     |\n * |                                 | dd      | 01, 02, ..., 31                   |       |\n * | Day of year                     | D       | 1, 2, ..., 365, 366               | 9     |\n * |                                 | Do      | 1st, 2nd, ..., 365th, 366th       | 7     |\n * |                                 | DD      | 01, 02, ..., 365, 366             | 9     |\n * |                                 | DDD     | 001, 002, ..., 365, 366           |       |\n * |                                 | DDDD    | ...                               | 3     |\n * | Day of week (formatting)        | E..EEE  | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | EEEEE   | M, T, W, T, F, S, S               |       |\n * |                                 | EEEEEE  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | ISO day of week (formatting)    | i       | 1, 2, 3, ..., 7                   | 7     |\n * |                                 | io      | 1st, 2nd, ..., 7th                | 7     |\n * |                                 | ii      | 01, 02, ..., 07                   | 7     |\n * |                                 | iii     | Mon, Tue, Wed, ..., Sun           | 7     |\n * |                                 | iiii    | Monday, Tuesday, ..., Sunday      | 2,7   |\n * |                                 | iiiii   | M, T, W, T, F, S, S               | 7     |\n * |                                 | iiiiii  | Mo, Tu, We, Th, Fr, Sa, Su        | 7     |\n * | Local day of week (formatting)  | e       | 2, 3, 4, ..., 1                   |       |\n * |                                 | eo      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | ee      | 02, 03, ..., 01                   |       |\n * |                                 | eee     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | eeeee   | M, T, W, T, F, S, S               |       |\n * |                                 | eeeeee  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | Local day of week (stand-alone) | c       | 2, 3, 4, ..., 1                   |       |\n * |                                 | co      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | cc      | 02, 03, ..., 01                   |       |\n * |                                 | ccc     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | ccccc   | M, T, W, T, F, S, S               |       |\n * |                                 | cccccc  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | AM, PM                          | a..aa   | AM, PM                            |       |\n * |                                 | aaa     | am, pm                            |       |\n * |                                 | aaaa    | a.m., p.m.                        | 2     |\n * |                                 | aaaaa   | a, p                              |       |\n * | AM, PM, noon, midnight          | b..bb   | AM, PM, noon, midnight            |       |\n * |                                 | bbb     | am, pm, noon, midnight            |       |\n * |                                 | bbbb    | a.m., p.m., noon, midnight        | 2     |\n * |                                 | bbbbb   | a, p, n, mi                       |       |\n * | Flexible day period             | B..BBB  | at night, in the morning, ...     |       |\n * |                                 | BBBB    | at night, in the morning, ...     | 2     |\n * |                                 | BBBBB   | at night, in the morning, ...     |       |\n * | Hour [1-12]                     | h       | 1, 2, ..., 11, 12                 |       |\n * |                                 | ho      | 1st, 2nd, ..., 11th, 12th         | 7     |\n * |                                 | hh      | 01, 02, ..., 11, 12               |       |\n * | Hour [0-23]                     | H       | 0, 1, 2, ..., 23                  |       |\n * |                                 | Ho      | 0th, 1st, 2nd, ..., 23rd          | 7     |\n * |                                 | HH      | 00, 01, 02, ..., 23               |       |\n * | Hour [0-11]                     | K       | 1, 2, ..., 11, 0                  |       |\n * |                                 | Ko      | 1st, 2nd, ..., 11th, 0th          | 7     |\n * |                                 | KK      | 01, 02, ..., 11, 00               |       |\n * | Hour [1-24]                     | k       | 24, 1, 2, ..., 23                 |       |\n * |                                 | ko      | 24th, 1st, 2nd, ..., 23rd         | 7     |\n * |                                 | kk      | 24, 01, 02, ..., 23               |       |\n * | Minute                          | m       | 0, 1, ..., 59                     |       |\n * |                                 | mo      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | mm      | 00, 01, ..., 59                   |       |\n * | Second                          | s       | 0, 1, ..., 59                     |       |\n * |                                 | so      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | ss      | 00, 01, ..., 59                   |       |\n * | Fraction of second              | S       | 0, 1, ..., 9                      |       |\n * |                                 | SS      | 00, 01, ..., 99                   |       |\n * |                                 | SSS     | 000, 001, ..., 999                |       |\n * |                                 | SSSS    | ...                               | 3     |\n * | Timezone (ISO-8601 w/ Z)        | X       | -08, +0530, Z                     |       |\n * |                                 | XX      | -0800, +0530, Z                   |       |\n * |                                 | XXX     | -08:00, +05:30, Z                 |       |\n * |                                 | XXXX    | -0800, +0530, Z, +123456          | 2     |\n * |                                 | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\n * | Timezone (ISO-8601 w/o Z)       | x       | -08, +0530, +00                   |       |\n * |                                 | xx      | -0800, +0530, +0000               |       |\n * |                                 | xxx     | -08:00, +05:30, +00:00            | 2     |\n * |                                 | xxxx    | -0800, +0530, +0000, +123456      |       |\n * |                                 | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\n * | Timezone (GMT)                  | O...OOO | GMT-8, GMT+5:30, GMT+0            |       |\n * |                                 | OOOO    | GMT-08:00, GMT+05:30, GMT+00:00   | 2     |\n * | Timezone (specific non-locat.)  | z...zzz | GMT-8, GMT+5:30, GMT+0            | 6     |\n * |                                 | zzzz    | GMT-08:00, GMT+05:30, GMT+00:00   | 2,6   |\n * | Seconds timestamp               | t       | 512969520                         | 7     |\n * |                                 | tt      | ...                               | 3,7   |\n * | Milliseconds timestamp          | T       | 512969520900                      | 7     |\n * |                                 | TT      | ...                               | 3,7   |\n * | Long localized date             | P       | 04/29/1453                        | 7     |\n * |                                 | PP      | Apr 29, 1453                      | 7     |\n * |                                 | PPP     | April 29th, 1453                  | 7     |\n * |                                 | PPPP    | Friday, April 29th, 1453          | 2,7   |\n * | Long localized time             | p       | 12:00 AM                          | 7     |\n * |                                 | pp      | 12:00:00 AM                       | 7     |\n * |                                 | ppp     | 12:00:00 AM GMT+2                 | 7     |\n * |                                 | pppp    | 12:00:00 AM GMT+02:00             | 2,7   |\n * | Combination of date and time    | Pp      | 04/29/1453, 12:00 AM              | 7     |\n * |                                 | PPpp    | Apr 29, 1453, 12:00:00 AM         | 7     |\n * |                                 | PPPppp  | April 29th, 1453 at ...           | 7     |\n * |                                 | PPPPpppp| Friday, April 29th, 1453 at ...   | 2,7   |\n * Notes:\n * 1. \"Formatting\" units (e.g. formatting quarter) in the default en-US locale\n *    are the same as \"stand-alone\" units, but are different in some languages.\n *    \"Formatting\" units are declined according to the rules of the language\n *    in the context of a date. \"Stand-alone\" units are always nominative singular:\n *\n *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`\n *\n *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`\n *\n * 2. Any sequence of the identical letters is a pattern, unless it is escaped by\n *    the single quote characters (see below).\n *    If the sequence is longer than listed in table (e.g. `EEEEEEEEEEE`)\n *    the output will be the same as default pattern for this unit, usually\n *    the longest one (in case of ISO weekdays, `EEEE`). Default patterns for units\n *    are marked with \"2\" in the last column of the table.\n *\n *    `format(new Date(2017, 10, 6), 'MMM') //=> 'Nov'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMM') //=> 'N'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMMM') //=> 'November'`\n *\n * 3. Some patterns could be unlimited length (such as `yyyyyyyy`).\n *    The output will be padded with zeros to match the length of the pattern.\n *\n *    `format(new Date(2017, 10, 6), 'yyyyyyyy') //=> '00002017'`\n *\n * 4. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\n *    These tokens represent the shortest form of the quarter.\n *\n * 5. The main difference between `y` and `u` patterns are B.C. years:\n *\n *    | Year | `y` | `u` |\n *    |------|-----|-----|\n *    | AC 1 |   1 |   1 |\n *    | BC 1 |   1 |   0 |\n *    | BC 2 |   2 |  -1 |\n *\n *    Also `yy` always returns the last two digits of a year,\n *    while `uu` pads single digit years to 2 characters and returns other years unchanged:\n *\n *    | Year | `yy` | `uu` |\n *    |------|------|------|\n *    | 1    |   01 |   01 |\n *    | 14   |   14 |   14 |\n *    | 376  |   76 |  376 |\n *    | 1453 |   53 | 1453 |\n *\n *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),\n *    except local week-numbering years are dependent on `options.weekStartsOn`\n *    and `options.firstWeekContainsDate` (compare [getISOWeekYear](https://date-fns.org/docs/getISOWeekYear)\n *    and [getWeekYear](https://date-fns.org/docs/getWeekYear)).\n *\n * 6. Specific non-location timezones are currently unavailable in `date-fns`,\n *    so right now these tokens fall back to GMT timezones.\n *\n * 7. These patterns are not in the Unicode Technical Standard #35:\n *    - `i`: ISO day of week\n *    - `I`: ISO week of year\n *    - `R`: ISO week-numbering year\n *    - `t`: seconds timestamp\n *    - `T`: milliseconds timestamp\n *    - `o`: ordinal number modifier\n *    - `P`: long localized date\n *    - `p`: long localized time\n *\n * 8. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.\n *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * 9. `D` and `DD` tokens represent days of the year but they are often confused with days of the month.\n *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * @param date - The original date\n * @param format - The string of tokens\n * @param options - An object with options\n *\n * @returns The formatted date string\n *\n * @throws `date` must not be Invalid Date\n * @throws `options.locale` must contain `localize` property\n * @throws `options.locale` must contain `formatLong` property\n * @throws use `yyyy` instead of `YYYY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `yy` instead of `YY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `d` instead of `D` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `dd` instead of `DD` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws format string contains an unescaped latin alphabet character\n *\n * @example\n * // Represent 11 February 2014 in middle-endian format:\n * const result = format(new Date(2014, 1, 11), 'MM/dd/yyyy')\n * //=> '02/11/2014'\n *\n * @example\n * // Represent 2 July 2014 in Esperanto:\n * import { eoLocale } from 'date-fns/locale/eo'\n * const result = format(new Date(2014, 6, 2), \"do 'de' MMMM yyyy\", {\n *   locale: eoLocale\n * })\n * //=> '2-a de julio 2014'\n *\n * @example\n * // Escape string by single quote characters:\n * const result = format(new Date(2014, 6, 2, 15), \"h 'o''clock'\")\n * //=> \"3 o'clock\"\n */\nexport function format(date, formatStr, options) {\n  const defaultOptions = getDefaultOptions();\n  const locale = options?.locale ?? defaultOptions.locale ?? defaultLocale;\n\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const weekStartsOn =\n    options?.weekStartsOn ??\n    options?.locale?.options?.weekStartsOn ??\n    defaultOptions.weekStartsOn ??\n    defaultOptions.locale?.options?.weekStartsOn ??\n    0;\n\n  const originalDate = toDate(date, options?.in);\n\n  if (!isValid(originalDate)) {\n    throw new RangeError(\"Invalid time value\");\n  }\n\n  let parts = formatStr\n    .match(longFormattingTokensRegExp)\n    .map((substring) => {\n      const firstCharacter = substring[0];\n      if (firstCharacter === \"p\" || firstCharacter === \"P\") {\n        const longFormatter = longFormatters[firstCharacter];\n        return longFormatter(substring, locale.formatLong);\n      }\n      return substring;\n    })\n    .join(\"\")\n    .match(formattingTokensRegExp)\n    .map((substring) => {\n      // Replace two single quote characters with one single quote character\n      if (substring === \"''\") {\n        return { isToken: false, value: \"'\" };\n      }\n\n      const firstCharacter = substring[0];\n      if (firstCharacter === \"'\") {\n        return { isToken: false, value: cleanEscapedString(substring) };\n      }\n\n      if (formatters[firstCharacter]) {\n        return { isToken: true, value: substring };\n      }\n\n      if (firstCharacter.match(unescapedLatinCharacterRegExp)) {\n        throw new RangeError(\n          \"Format string contains an unescaped latin alphabet character `\" +\n            firstCharacter +\n            \"`\",\n        );\n      }\n\n      return { isToken: false, value: substring };\n    });\n\n  // invoke localize preprocessor (only for french locales at the moment)\n  if (locale.localize.preprocessor) {\n    parts = locale.localize.preprocessor(originalDate, parts);\n  }\n\n  const formatterOptions = {\n    firstWeekContainsDate,\n    weekStartsOn,\n    locale,\n  };\n\n  return parts\n    .map((part) => {\n      if (!part.isToken) return part.value;\n\n      const token = part.value;\n\n      if (\n        (!options?.useAdditionalWeekYearTokens &&\n          isProtectedWeekYearToken(token)) ||\n        (!options?.useAdditionalDayOfYearTokens &&\n          isProtectedDayOfYearToken(token))\n      ) {\n        warnOrThrowProtectedError(token, formatStr, String(date));\n      }\n\n      const formatter = formatters[token[0]];\n      return formatter(originalDate, token, locale.localize, formatterOptions);\n    })\n    .join(\"\");\n}\n\nfunction cleanEscapedString(input) {\n  const matched = input.match(escapedStringRegExp);\n\n  if (!matched) {\n    return input;\n  }\n\n  return matched[1].replace(doubleQuoteRegExp, \"'\");\n}\n\n// Fallback for modularized imports:\nexport default format;\n","import { format, parseISO } from \"date-fns\";\n\nconst weatherAPIkey = \"83RVYNF7EDJEKWLXMA3UNATQZ\";\nconst weatherThisWeek = document.querySelectorAll(\".weather-day\");\nconst weatherURL =\n  \"https://weather.visualcrossing.com/VisualCrossingWebServices/rest/services/timeline/\";\n\nexport const weeklyWeather = [];\n\nexport async function getWeather(location) {\n  try {\n    const response = await fetch(\n      `${weatherURL}${location}?key=${weatherAPIkey}`\n    );\n    const contentType = response.headers.get(\"content-type\");\n    if (!contentType || !contentType.includes(\"application/json\")) {\n      throw new TypeError(\"Oops, we haven't got JSON!\");\n    }\n    const json = await response.json();\n    addDaysToWeekWeather(json.days);\n  } catch (error) {\n    console.log(\"Error:\", error);\n  }\n}\n\nfunction addDaysToWeekWeather(days) {\n  for (let i = 0; i < 7; i++) {\n    weeklyWeather.push(makeDayObj(days[i]));\n  }\n}\n\nfunction makeDayObj(day) {\n  return {\n    conditions: day.conditions,\n    datetime: day.datetime,\n    description: day.description,\n    temp: day.temp,\n    tempmax: day.tempmax,\n    tempmin: day.tempmin,\n    icon: day.icon,\n  };\n}\n\nexport function printThisWeeksWeather() {\n  let i = 0;\n  for (const day of weatherThisWeek) {\n    const rawDate = weeklyWeather[i].datetime;\n    //? This makes sure that it is specified to the users timezone\n    const localDate = parseISO(rawDate);\n    const formatted = format(localDate, \"MMMM do\");\n    day.textContent = formatted;\n    i++;\n  }\n}\n\n//TODO: Dynamic import???\n//TODO: Change Image Icon for .weather-icon\nexport function selectWeatherDay(selectedDay) {\n  const json = getJsonForSelectedDay(selectedDay);\n  const weatherDescription = document.querySelector(\".weather-description\");\n  const weatherTemperature = document.querySelector(\".weather-temperature\");\n  weatherDescription.textContent = json.conditions;\n  weatherTemperature.innerHTML = `${json.temp}&#176;`;\n}\n\nexport function getJsonForSelectedDay(selectedDay) {\n  const index = selectedDay.split(\"-\")[1] - 1;\n  return weeklyWeather[index];\n}\n// This is what it looks like\n// {\n//   conditions: \"Clear\",\n//   datetime: \"2025-05-26\",\n//   description: \"Clear conditions throughout the day.\",\n//   temp: 86.1,\n//   tempmax: 96.1,\n//   tempmin: 76.1,\n//   icon: \"clear-day\",\n// }\n","\"use strict\";\n\n/* istanbul ignore next  */\nfunction apply(styleElement, options, obj) {\n  var css = \"\";\n  if (obj.supports) {\n    css += \"@supports (\".concat(obj.supports, \") {\");\n  }\n  if (obj.media) {\n    css += \"@media \".concat(obj.media, \" {\");\n  }\n  var needLayer = typeof obj.layer !== \"undefined\";\n  if (needLayer) {\n    css += \"@layer\".concat(obj.layer.length > 0 ? \" \".concat(obj.layer) : \"\", \" {\");\n  }\n  css += obj.css;\n  if (needLayer) {\n    css += \"}\";\n  }\n  if (obj.media) {\n    css += \"}\";\n  }\n  if (obj.supports) {\n    css += \"}\";\n  }\n  var sourceMap = obj.sourceMap;\n  if (sourceMap && typeof btoa !== \"undefined\") {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  }\n\n  // For old IE\n  /* istanbul ignore if  */\n  options.styleTagTransform(css, styleElement, options.options);\n}\nfunction removeStyleElement(styleElement) {\n  // istanbul ignore if\n  if (styleElement.parentNode === null) {\n    return false;\n  }\n  styleElement.parentNode.removeChild(styleElement);\n}\n\n/* istanbul ignore next  */\nfunction domAPI(options) {\n  if (typeof document === \"undefined\") {\n    return {\n      update: function update() {},\n      remove: function remove() {}\n    };\n  }\n  var styleElement = options.insertStyleElement(options);\n  return {\n    update: function update(obj) {\n      apply(styleElement, options, obj);\n    },\n    remove: function remove() {\n      removeStyleElement(styleElement);\n    }\n  };\n}\nmodule.exports = domAPI;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","__webpack_require__.nc = undefined;","// startup\n// Load entry module and return exports\n// This entry module used 'module' so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(44);\n"],"names":["webpackQueues","webpackExports","webpackError","resolveQueue","giphyAPIkey","giphyURL","gifContainer","document","querySelector","async","getGif","selectedDay","searchQuery","conditions","console","log","response","fetch","contentType","headers","get","includes","TypeError","img","createElement","gifURL","json","data","images","original","url","src","innerHTML","appendChild","error","addEventListener","event","target","id","module","exports","styleElement","nonce","setAttribute","stylesInDOM","getIndexByIdentifier","identifier","result","i","length","modulesToDom","list","options","idCountMap","identifiers","item","base","count","concat","indexByIdentifier","obj","css","media","sourceMap","supports","layer","references","updater","addElementStyle","byIndex","splice","push","api","domAPI","update","newObj","remove","lastIdentifiers","newList","index","newLastIdentifiers","_i","_index","styleSheet","cssText","firstChild","removeChild","createTextNode","cssWithMappingToString","toString","this","map","content","needLayer","join","modules","dedupe","undefined","alreadyImportedModules","k","_k","cssMapping","btoa","base64","unescape","encodeURIComponent","JSON","stringify","sourceMapping","___CSS_LOADER_EXPORT___","element","setAttributes","attributes","insert","memo","style","styleTarget","window","HTMLIFrameElement","contentDocument","head","e","getTarget","Error","styleTagTransform","insertStyleElement","locals","Math","pow","millisecondsInWeek","millisecondsInMinute","millisecondsInHour","constructFromSymbol","Symbol","for","constructFrom","date","value","Date","constructor","toDate","argument","context","parseISO","invalidDate","in","NaN","additionalDigits","dateStrings","dateString","array","split","patterns","dateTimeDelimiter","timeString","test","timeZoneDelimiter","substr","token","timezone","exec","time","replace","splitDateString","parseYearResult","regex","RegExp","captures","match","year","restDateString","parseInt","century","slice","parseYear","dateRegex","isWeekDate","dayOfYear","parseDateUnit","month","day","week","dayOfWeek","_year","validateWeekDate","isoWeekYear","setUTCFullYear","diff","getUTCDay","setUTCDate","getUTCDate","dayOfISOWeekYear","daysInMonths","isLeapYearIndex","validateDate","validateDayOfYearDate","max","parseDate","isNaN","timestamp","offset","timeRegex","hours","parseTimeUnit","minutes","seconds","validateTime","parseTime","tmpDate","setFullYear","getUTCFullYear","getUTCMonth","setHours","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","timezoneString","timezoneRegex","sign","_hours","validateTimezone","parseTimezone","parseFloat","formatDistanceLocale","lessThanXSeconds","one","other","xSeconds","halfAMinute","lessThanXMinutes","xMinutes","aboutXHours","xHours","xDays","aboutXWeeks","xWeeks","aboutXMonths","xMonths","aboutXYears","xYears","overXYears","almostXYears","buildFormatLongFn","args","width","String","defaultWidth","formats","formatLong","full","long","medium","short","dateTime","formatRelativeLocale","lastWeek","yesterday","today","tomorrow","nextWeek","buildLocalizeFn","valuesArray","formattingValues","defaultFormattingWidth","values","argumentCallback","buildMatchFn","string","matchPattern","matchPatterns","defaultMatchWidth","matchResult","matchedString","parsePatterns","defaultParseWidth","key","Array","isArray","findIndex","object","Object","prototype","hasOwnProperty","call","findKey","valueCallback","rest","enUS","code","formatDistance","tokenValue","addSuffix","comparison","formatRelative","_date","_baseDate","_options","localize","ordinalNumber","dirtyNumber","number","Number","rem100","era","narrow","abbreviated","wide","quarter","dayPeriod","am","pm","midnight","noon","morning","afternoon","evening","night","parsePattern","parseResult","any","weekStartsOn","firstWeekContainsDate","defaultOptions","getDefaultOptions","getTimezoneOffsetInMilliseconds","utcDate","UTC","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","startOfDay","getDayOfYear","laterDate","earlierDate","laterDate_","earlierDate_","dates","normalize","bind","find","normalizeDates","laterStartOfDay","earlierStartOfDay","laterTimestamp","earlierTimestamp","round","differenceInCalendarDays","date_","startOfYear","startOfWeek","locale","getDay","setDate","startOfISOWeek","getISOWeekYear","fourthOfJanuaryOfNextYear","startOfNextYear","fourthOfJanuaryOfThisYear","startOfThisYear","getTime","getISOWeek","fourthOfJanuary","startOfISOWeekYear","getWeekYear","firstWeekOfNextYear","firstWeekOfThisYear","getWeek","firstWeek","startOfWeekYear","addLeadingZeros","targetLength","abs","padStart","lightFormatters","y","signedYear","M","d","a","dayPeriodEnumValue","toUpperCase","h","H","m","s","S","numberOfDigits","milliseconds","trunc","formatters","G","unit","Y","signedWeekYear","weekYear","R","u","Q","ceil","q","L","w","I","isoWeek","D","E","localDayOfWeek","c","isoDayOfWeek","toLowerCase","b","B","K","X","_localize","timezoneOffset","getTimezoneOffset","formatTimezoneWithOptionalMinutes","formatTimezone","x","O","formatTimezoneShort","z","t","T","delimiter","absOffset","dateLongFormatter","pattern","timeLongFormatter","longFormatters","p","P","datePattern","timePattern","dateTimeFormat","dayOfYearTokenRE","weekYearTokenRE","throwTokens","isValid","formattingTokensRegExp","longFormattingTokensRegExp","escapedStringRegExp","doubleQuoteRegExp","unescapedLatinCharacterRegExp","format","formatStr","originalDate","RangeError","parts","substring","firstCharacter","longFormatter","isToken","cleanEscapedString","preprocessor","formatterOptions","part","useAdditionalWeekYearTokens","isProtectedWeekYearToken","useAdditionalDayOfYearTokens","isProtectedDayOfYearToken","input","_message","subject","message","warn","warnOrThrowProtectedError","formatter","matched","weatherAPIkey","weatherThisWeek","querySelectorAll","weatherURL","weeklyWeather","getWeather","location","days","datetime","description","temp","tempmax","tempmin","icon","addDaysToWeekWeather","printThisWeeksWeather","formatted","textContent","selectWeatherDay","getJsonForSelectedDay","weatherDescription","weatherTemperature","apply","parentNode","removeStyleElement","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","queue","forEach","fn","r","body","hasAwait","currentDeps","outerResolve","reject","depQueues","Set","promise","Promise","resolve","rej","deps","dep","then","ret","wrapDeps","getResult","fnQueue","has","add","err","n","getter","__esModule","definition","o","defineProperty","enumerable","prop","nc"],"sourceRoot":""}